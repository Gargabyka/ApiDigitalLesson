// <auto-generated />
using System;
using ApiDigitalLesson.Migration.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApiDigitalLesson.Migration.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230820160331_UpdateDataBase")]
    partial class UpdateDataBase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.AboutTeacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("AboutTeacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.GroupLesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CancelMessage")
                        .HasColumnType("text");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfirmedForStudent")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfirmedForTeacher")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFinish")
                        .HasColumnType("boolean");

                    b.Property<int>("MaxQuantityStudents")
                        .HasColumnType("integer");

                    b.Property<Guid>("TeacherTypeLessonId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TeacherTypeLessonId");

                    b.ToTable("GroupLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.GroupLessonStudents", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("StudentsId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudentsId");

                    b.ToTable("GroupLessonStudents");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Scheduler", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("GroupLessonId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsWeekend")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("SingleLessonId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GroupLessonId");

                    b.HasIndex("SingleLessonId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Schedulers");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.SettingsStudent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAcceptForLessonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAcceptForLessonTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAllowCreateLesson")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCancelLessonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCancelLessonTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLessonComingSoonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLessonComingSoonTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotificationEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotificationTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequestForLessonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequestForLessonTelegram")
                        .HasColumnType("boolean");

                    b.Property<int>("TimeBeforeLesson")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SettingsStudent");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.SettingsTeacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAcceptForLessonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAcceptForLessonTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAllowCreateLesson")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCancelLessonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCancelLessonTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLessonComingSoonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLessonComingSoonTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotificationEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotificationTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequestForLessonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequestForLessonTelegram")
                        .HasColumnType("boolean");

                    b.Property<int>("TimeBeforeLesson")
                        .HasColumnType("integer");

                    b.Property<int>("TimeCancelLesson")
                        .HasColumnType("integer");

                    b.Property<int>("TimeCreateLesson")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SettingsTeacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.SingleLesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CancelMessage")
                        .HasColumnType("text");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfirmedForStudent")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfirmedForTeacher")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFinish")
                        .HasColumnType("boolean");

                    b.Property<Guid>("StudentsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TeacherTypeLessonId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("StudentsId");

                    b.HasIndex("TeacherTypeLessonId");

                    b.ToTable("SingleLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Students", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DateBirthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<Guid>("SettingsStudentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("TelegramId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SettingsStudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DateBirthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("bytea");

                    b.Property<Guid>("SettingsTeacherId")
                        .HasColumnType("uuid");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("TelegramId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SettingsTeacherId");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TeacherTypeLesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsGroup")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOffline")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSingle")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TypeLessonsId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.HasIndex("TypeLessonsId");

                    b.ToTable("TeacherTypeLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TypeLessons", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("Category")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("TypeLessons", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6d08d5f3-a354-471d-9256-0389d819312a"),
                            Category = 0,
                            Name = "ЕГЭ"
                        },
                        new
                        {
                            Id = new Guid("cdc1c708-e7da-4a52-a859-e1adaba71e94"),
                            Category = 1,
                            Name = "ОГЭ"
                        },
                        new
                        {
                            Id = new Guid("89c9f848-8e0a-47d0-9111-bf242f16bfaf"),
                            Category = 2,
                            Name = "Технические науки"
                        },
                        new
                        {
                            Id = new Guid("2bc0427d-8e20-4ef2-9a8e-33435da65d25"),
                            Category = 3,
                            Name = "Естественные науки"
                        },
                        new
                        {
                            Id = new Guid("e5657289-658e-4d7c-baa8-e7f113ed0a05"),
                            Category = 4,
                            Name = "Гуманитарные науки"
                        },
                        new
                        {
                            Id = new Guid("21e0d888-4c31-4f75-bc79-7375dfc98c29"),
                            Category = 5,
                            Name = "Программирование"
                        },
                        new
                        {
                            Id = new Guid("238e4d81-72f9-4c6f-984d-36b4f97a384d"),
                            Category = 6,
                            Name = "Школьная программа"
                        },
                        new
                        {
                            Id = new Guid("09353c58-a5a2-4ee3-a37f-8d6a4fe66534"),
                            Category = 7,
                            Name = "Музыка"
                        },
                        new
                        {
                            Id = new Guid("df2489c9-f8d0-443e-88ed-05eb06e40f99"),
                            Category = 8,
                            Name = "Искусство"
                        },
                        new
                        {
                            Id = new Guid("2f301787-8670-4f32-b67e-f1f9d322c46e"),
                            Name = "Математика (базовый уровень)",
                            ParentId = new Guid("6d08d5f3-a354-471d-9256-0389d819312a")
                        },
                        new
                        {
                            Id = new Guid("acc1b24c-6fe6-4828-8ef5-dccd22c34b27"),
                            Name = "Математика (профильный уровень)",
                            ParentId = new Guid("6d08d5f3-a354-471d-9256-0389d819312a")
                        },
                        new
                        {
                            Id = new Guid("3893b9a9-1a6c-405c-b761-658e68884487"),
                            Name = "Русский язык",
                            ParentId = new Guid("6d08d5f3-a354-471d-9256-0389d819312a")
                        },
                        new
                        {
                            Id = new Guid("3f99412c-525f-452f-889a-2df21606ccde"),
                            Name = "Литература",
                            ParentId = new Guid("6d08d5f3-a354-471d-9256-0389d819312a")
                        },
                        new
                        {
                            Id = new Guid("0dc76da2-1b40-4f61-bafa-0523c9719046"),
                            Name = "Физика",
                            ParentId = new Guid("6d08d5f3-a354-471d-9256-0389d819312a")
                        },
                        new
                        {
                            Id = new Guid("ef7f5899-958c-4668-a5cd-84c56e7fe6ae"),
                            Name = "Химия",
                            ParentId = new Guid("6d08d5f3-a354-471d-9256-0389d819312a")
                        },
                        new
                        {
                            Id = new Guid("266aad92-bd36-424a-a6a8-72441c53d47c"),
                            Name = "История",
                            ParentId = new Guid("6d08d5f3-a354-471d-9256-0389d819312a")
                        },
                        new
                        {
                            Id = new Guid("e1147ca7-18a6-4c9e-aca3-a2da6b24b26b"),
                            Name = "Обществознание",
                            ParentId = new Guid("6d08d5f3-a354-471d-9256-0389d819312a")
                        },
                        new
                        {
                            Id = new Guid("b4a3dafe-c14f-443b-b41a-7343252d91be"),
                            Name = "Информатика",
                            ParentId = new Guid("6d08d5f3-a354-471d-9256-0389d819312a")
                        },
                        new
                        {
                            Id = new Guid("3e3bff0b-0bd7-4868-acfa-5abd60343afd"),
                            Name = "Биология",
                            ParentId = new Guid("6d08d5f3-a354-471d-9256-0389d819312a")
                        },
                        new
                        {
                            Id = new Guid("b1e0f996-a144-45af-8b8e-dabdc135d10a"),
                            Name = "География",
                            ParentId = new Guid("6d08d5f3-a354-471d-9256-0389d819312a")
                        },
                        new
                        {
                            Id = new Guid("d84bf898-0ca4-4bdb-821c-84c9f3fd8719"),
                            Name = "Английский язык",
                            ParentId = new Guid("6d08d5f3-a354-471d-9256-0389d819312a")
                        },
                        new
                        {
                            Id = new Guid("8409c4e6-af90-4207-9733-9094698075f8"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("6d08d5f3-a354-471d-9256-0389d819312a")
                        },
                        new
                        {
                            Id = new Guid("e1e0872e-bbf7-476c-b534-e0e369a823ad"),
                            Name = "Французский язык",
                            ParentId = new Guid("6d08d5f3-a354-471d-9256-0389d819312a")
                        },
                        new
                        {
                            Id = new Guid("6712628e-cd6d-4e6c-8cfb-01919dcbb142"),
                            Name = "Китайский язык",
                            ParentId = new Guid("6d08d5f3-a354-471d-9256-0389d819312a")
                        },
                        new
                        {
                            Id = new Guid("42d1b0c4-9620-4965-a369-51a4608ccfe4"),
                            Name = "Испанский язык",
                            ParentId = new Guid("6d08d5f3-a354-471d-9256-0389d819312a")
                        },
                        new
                        {
                            Id = new Guid("19fc4d02-2a63-467f-a0ec-1607d3e481bc"),
                            Name = "География",
                            ParentId = new Guid("6d08d5f3-a354-471d-9256-0389d819312a")
                        },
                        new
                        {
                            Id = new Guid("03233261-393a-4191-986c-2756e8dd0ba9"),
                            Name = "Математика",
                            ParentId = new Guid("cdc1c708-e7da-4a52-a859-e1adaba71e94")
                        },
                        new
                        {
                            Id = new Guid("9b1003f4-8bb8-4963-b63d-ec1a1122224b"),
                            Name = "Русский язык",
                            ParentId = new Guid("cdc1c708-e7da-4a52-a859-e1adaba71e94")
                        },
                        new
                        {
                            Id = new Guid("58921973-e542-45a9-8e8b-05a88b4325bb"),
                            Name = "Литература",
                            ParentId = new Guid("cdc1c708-e7da-4a52-a859-e1adaba71e94")
                        },
                        new
                        {
                            Id = new Guid("decb4274-8a2f-4599-b9a2-b69fcf0bd68e"),
                            Name = "Физика",
                            ParentId = new Guid("cdc1c708-e7da-4a52-a859-e1adaba71e94")
                        },
                        new
                        {
                            Id = new Guid("6604ce92-3411-41ce-b8a1-290099b47916"),
                            Name = "Химия",
                            ParentId = new Guid("cdc1c708-e7da-4a52-a859-e1adaba71e94")
                        },
                        new
                        {
                            Id = new Guid("f0e19e19-3511-422f-9d69-d572858b963b"),
                            Name = "История",
                            ParentId = new Guid("cdc1c708-e7da-4a52-a859-e1adaba71e94")
                        },
                        new
                        {
                            Id = new Guid("0fa97d5a-162e-46c8-9713-bb5f84f013be"),
                            Name = "Обществознание",
                            ParentId = new Guid("cdc1c708-e7da-4a52-a859-e1adaba71e94")
                        },
                        new
                        {
                            Id = new Guid("513f1003-db39-415b-b768-ccf14a41ee65"),
                            Name = "Информатика",
                            ParentId = new Guid("cdc1c708-e7da-4a52-a859-e1adaba71e94")
                        },
                        new
                        {
                            Id = new Guid("697da011-12bc-4926-b556-de98f2b5b411"),
                            Name = "Биология",
                            ParentId = new Guid("cdc1c708-e7da-4a52-a859-e1adaba71e94")
                        },
                        new
                        {
                            Id = new Guid("b72c2365-4177-4351-a493-75c5d97e3bb9"),
                            Name = "География",
                            ParentId = new Guid("cdc1c708-e7da-4a52-a859-e1adaba71e94")
                        },
                        new
                        {
                            Id = new Guid("9005e7ca-6253-4759-9070-91924c2649e4"),
                            Name = "Английский язык",
                            ParentId = new Guid("cdc1c708-e7da-4a52-a859-e1adaba71e94")
                        },
                        new
                        {
                            Id = new Guid("c544be7b-8a0c-4186-b932-58dfe315c8d6"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("cdc1c708-e7da-4a52-a859-e1adaba71e94")
                        },
                        new
                        {
                            Id = new Guid("8d6e2c3e-a644-438f-a2a8-7b09a68ecc6d"),
                            Name = "Французский язык",
                            ParentId = new Guid("cdc1c708-e7da-4a52-a859-e1adaba71e94")
                        },
                        new
                        {
                            Id = new Guid("3d4affb7-8af5-4789-8397-e12d2533edbe"),
                            Name = "Китайский язык",
                            ParentId = new Guid("cdc1c708-e7da-4a52-a859-e1adaba71e94")
                        },
                        new
                        {
                            Id = new Guid("7d3babeb-73f6-4f65-93ef-3ca9ef59c4a1"),
                            Name = "Испанский язык",
                            ParentId = new Guid("cdc1c708-e7da-4a52-a859-e1adaba71e94")
                        },
                        new
                        {
                            Id = new Guid("a95fb8bd-37a5-4640-9d75-c7d365d6e02a"),
                            Name = "География",
                            ParentId = new Guid("cdc1c708-e7da-4a52-a859-e1adaba71e94")
                        },
                        new
                        {
                            Id = new Guid("944753cd-1031-41ed-91d4-ac2575da8cbf"),
                            Name = "1-4 класс",
                            ParentId = new Guid("238e4d81-72f9-4c6f-984d-36b4f97a384d")
                        },
                        new
                        {
                            Id = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e"),
                            Name = "5-9 класс",
                            ParentId = new Guid("238e4d81-72f9-4c6f-984d-36b4f97a384d")
                        },
                        new
                        {
                            Id = new Guid("6058a6c6-aff4-4b8d-9b81-9ad82274268c"),
                            Name = "9-11 класс",
                            ParentId = new Guid("238e4d81-72f9-4c6f-984d-36b4f97a384d")
                        },
                        new
                        {
                            Id = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66"),
                            Name = "Народные языки",
                            ParentId = new Guid("238e4d81-72f9-4c6f-984d-36b4f97a384d")
                        },
                        new
                        {
                            Id = new Guid("e32b98db-e5c9-46d3-9899-ea9046c366dc"),
                            Name = "Русский язык",
                            ParentId = new Guid("944753cd-1031-41ed-91d4-ac2575da8cbf")
                        },
                        new
                        {
                            Id = new Guid("cb316b6c-51d8-496c-8a02-49c9a53f61a3"),
                            Name = "Литературное чтение",
                            ParentId = new Guid("944753cd-1031-41ed-91d4-ac2575da8cbf")
                        },
                        new
                        {
                            Id = new Guid("8861b7a4-edf4-447d-bff7-628f7aaa3c12"),
                            Name = "Математика",
                            ParentId = new Guid("944753cd-1031-41ed-91d4-ac2575da8cbf")
                        },
                        new
                        {
                            Id = new Guid("86d982e3-0239-4a3e-a64d-c0d7f9945d4f"),
                            Name = "Обществознание",
                            ParentId = new Guid("944753cd-1031-41ed-91d4-ac2575da8cbf")
                        },
                        new
                        {
                            Id = new Guid("ad685dd4-2ac8-41f7-a4b0-a7fe8db576e5"),
                            Name = "Окружающий мир",
                            ParentId = new Guid("944753cd-1031-41ed-91d4-ac2575da8cbf")
                        },
                        new
                        {
                            Id = new Guid("4f2ac461-02bd-4cd4-9fe4-9879842461e9"),
                            Name = "ИЗО",
                            ParentId = new Guid("944753cd-1031-41ed-91d4-ac2575da8cbf")
                        },
                        new
                        {
                            Id = new Guid("80eedf05-4a8f-4e68-b22d-73f95a427270"),
                            Name = "Музыка",
                            ParentId = new Guid("944753cd-1031-41ed-91d4-ac2575da8cbf")
                        },
                        new
                        {
                            Id = new Guid("efdd17b4-db75-4763-a54e-90d26502d8cd"),
                            Name = "Технология",
                            ParentId = new Guid("944753cd-1031-41ed-91d4-ac2575da8cbf")
                        },
                        new
                        {
                            Id = new Guid("252d382f-212e-4111-8208-2b42a6ff0da6"),
                            Name = "Физическая культура",
                            ParentId = new Guid("944753cd-1031-41ed-91d4-ac2575da8cbf")
                        },
                        new
                        {
                            Id = new Guid("fe62a969-f4e0-4a26-b690-de6e653edb2f"),
                            Name = "Английский язык",
                            ParentId = new Guid("944753cd-1031-41ed-91d4-ac2575da8cbf")
                        },
                        new
                        {
                            Id = new Guid("8f8f9230-1c89-4452-aed1-7eeb9da909b9"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("944753cd-1031-41ed-91d4-ac2575da8cbf")
                        },
                        new
                        {
                            Id = new Guid("ac423b5d-d2b5-4062-a275-c3c39346a4e0"),
                            Name = "Французский язык",
                            ParentId = new Guid("944753cd-1031-41ed-91d4-ac2575da8cbf")
                        },
                        new
                        {
                            Id = new Guid("a022e4ad-f74f-494f-a44f-4e96ba0f30c7"),
                            Name = "Испанский язык",
                            ParentId = new Guid("944753cd-1031-41ed-91d4-ac2575da8cbf")
                        },
                        new
                        {
                            Id = new Guid("0e439d4e-b215-4c11-afc9-2298c169a949"),
                            Name = "Китайский язык",
                            ParentId = new Guid("944753cd-1031-41ed-91d4-ac2575da8cbf")
                        },
                        new
                        {
                            Id = new Guid("868871b9-1f02-4669-bd12-38038ed2fe66"),
                            Name = "Русский язык",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("54593816-78f8-48b3-a0e4-b42f59ff2868"),
                            Name = "Литература",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("4d8852db-24ce-4230-b8a7-d02b47c2954a"),
                            Name = "История",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("a9a1893c-bef7-4407-87be-3389bfc4182b"),
                            Name = "Обществознание",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("102d6052-2448-44a2-9cff-8a74e82e2b41"),
                            Name = "География",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("092f4b41-a754-42ad-99a6-134a3c496b53"),
                            Name = "Алгебра",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("dcc997a0-2b86-406c-86f5-a58d42117331"),
                            Name = "Геометрия",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("2b908a39-b547-49c6-9f64-d849ebdc8880"),
                            Name = "Информатика",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("c3c74480-48d6-4844-824b-5b82560bed3b"),
                            Name = "Основы духовно-нравственной культуры народов России",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("728217c7-92bf-42f3-9358-a4e46fd8c827"),
                            Name = "Основы религиозных культур и светской этики",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("feb81f6d-efee-4922-9a3e-e66abbb6fb26"),
                            Name = "Физика",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("fc96fc1d-464f-4adc-ba66-b8147e8eca04"),
                            Name = "Биология",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("fb568fee-183e-4aa6-ab97-b18f470fee0f"),
                            Name = "Химия",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("92243da0-ceee-4805-8a17-270a401fbe1c"),
                            Name = "Изобразительное искусство",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("bf843f04-3ca2-43aa-a9ac-7f01d15916c8"),
                            Name = "Музыка",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("f5b7d9be-2f70-4d4f-b8cc-4bb97e93a87f"),
                            Name = "Технология",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("180361ae-10b8-4c44-9f6d-eceedbc57ea0"),
                            Name = "Физическая культура",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("f9edfa32-a8fc-4496-a394-5b2bed5231e5"),
                            Name = "Основы безопасности жизнедеятельности",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("9df41ea1-34cf-436f-874d-57061c76a18a"),
                            Name = "Английский язык",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("40ede0b3-846f-4d12-b980-d8fac38c84d3"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("9666d06d-faf4-402c-b7c1-3155982c7c95"),
                            Name = "Французский язык",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("7f48c80e-2e38-471c-a417-ef5d73c45744"),
                            Name = "Испанский язык",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("f5e2d652-13b8-4d3f-9005-9bf0f61e056f"),
                            Name = "Китайский язык",
                            ParentId = new Guid("558a8b1a-78a3-4a65-9683-3a3f7cc8a02e")
                        },
                        new
                        {
                            Id = new Guid("8e8529b1-bb75-40ae-b911-d092ce96f584"),
                            Name = "Алгебра",
                            ParentId = new Guid("6058a6c6-aff4-4b8d-9b81-9ad82274268c")
                        },
                        new
                        {
                            Id = new Guid("d5bb906b-8f8a-4fa9-8a55-b339ec0041cf"),
                            Name = "Геометрия",
                            ParentId = new Guid("6058a6c6-aff4-4b8d-9b81-9ad82274268c")
                        },
                        new
                        {
                            Id = new Guid("9e9fdaf0-2446-4e80-85eb-cad22421274a"),
                            Name = "Русский язык",
                            ParentId = new Guid("6058a6c6-aff4-4b8d-9b81-9ad82274268c")
                        },
                        new
                        {
                            Id = new Guid("6f0c6730-01e8-4c86-a3f3-8eb3c3fa387b"),
                            Name = "Литература",
                            ParentId = new Guid("6058a6c6-aff4-4b8d-9b81-9ad82274268c")
                        },
                        new
                        {
                            Id = new Guid("c1bde77c-5006-443a-8670-70f6a790cd48"),
                            Name = "Всеобщая история",
                            ParentId = new Guid("6058a6c6-aff4-4b8d-9b81-9ad82274268c")
                        },
                        new
                        {
                            Id = new Guid("f1935661-0a32-4937-8a60-8c0bc0e3db9e"),
                            Name = "История России",
                            ParentId = new Guid("6058a6c6-aff4-4b8d-9b81-9ad82274268c")
                        },
                        new
                        {
                            Id = new Guid("877c06f2-7d3d-4534-9ee2-c28ec55cfb91"),
                            Name = "Обществознание",
                            ParentId = new Guid("6058a6c6-aff4-4b8d-9b81-9ad82274268c")
                        },
                        new
                        {
                            Id = new Guid("64524068-80bf-45a7-b275-2ce043a164c9"),
                            Name = "Черчение",
                            ParentId = new Guid("6058a6c6-aff4-4b8d-9b81-9ad82274268c")
                        },
                        new
                        {
                            Id = new Guid("08a08f9b-36a5-408b-8e49-e348c055e9ba"),
                            Name = "Основы безопасности и жизнедеятельности",
                            ParentId = new Guid("6058a6c6-aff4-4b8d-9b81-9ad82274268c")
                        },
                        new
                        {
                            Id = new Guid("b47fd7d1-b608-4e01-9e5b-455cabe2e6d8"),
                            Name = "Информатика",
                            ParentId = new Guid("6058a6c6-aff4-4b8d-9b81-9ad82274268c")
                        },
                        new
                        {
                            Id = new Guid("9203fe6a-c69c-4339-a9ec-52e73b7f59e8"),
                            Name = "География",
                            ParentId = new Guid("6058a6c6-aff4-4b8d-9b81-9ad82274268c")
                        },
                        new
                        {
                            Id = new Guid("0cfce4a5-accf-45bc-879d-94d6a2391840"),
                            Name = "Физическая культура",
                            ParentId = new Guid("6058a6c6-aff4-4b8d-9b81-9ad82274268c")
                        },
                        new
                        {
                            Id = new Guid("0c5e8ff9-b040-4b31-a41f-f1250cc31f0f"),
                            Name = "Биология",
                            ParentId = new Guid("6058a6c6-aff4-4b8d-9b81-9ad82274268c")
                        },
                        new
                        {
                            Id = new Guid("15a9ce92-07c4-412a-a17a-f8e3b10f1d3d"),
                            Name = "Физика",
                            ParentId = new Guid("6058a6c6-aff4-4b8d-9b81-9ad82274268c")
                        },
                        new
                        {
                            Id = new Guid("e071fe10-4755-47a6-ba6d-35e6546f8c5f"),
                            Name = "Химия",
                            ParentId = new Guid("6058a6c6-aff4-4b8d-9b81-9ad82274268c")
                        },
                        new
                        {
                            Id = new Guid("8f5c09b8-6e7f-440d-8d9e-5c1b19fbf1b0"),
                            Name = "Английский язык",
                            ParentId = new Guid("6058a6c6-aff4-4b8d-9b81-9ad82274268c")
                        },
                        new
                        {
                            Id = new Guid("ca49acbc-32df-4a1e-a7d6-ab8f01869170"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("6058a6c6-aff4-4b8d-9b81-9ad82274268c")
                        },
                        new
                        {
                            Id = new Guid("ae7054c3-8c11-4631-8dc4-fa3b378d1967"),
                            Name = "Французский язык",
                            ParentId = new Guid("6058a6c6-aff4-4b8d-9b81-9ad82274268c")
                        },
                        new
                        {
                            Id = new Guid("b828bffc-b9e9-4abd-a293-e9a77dbd854c"),
                            Name = "Испанский язык",
                            ParentId = new Guid("6058a6c6-aff4-4b8d-9b81-9ad82274268c")
                        },
                        new
                        {
                            Id = new Guid("12358437-bf13-42c1-84e9-db86c984b9ab"),
                            Name = "Китайский язык",
                            ParentId = new Guid("6058a6c6-aff4-4b8d-9b81-9ad82274268c")
                        },
                        new
                        {
                            Id = new Guid("2f8fcf78-24ed-4010-a0f7-4fc4ab17401e"),
                            Name = "Абазинский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("51fb397e-2ecc-4820-9981-0eb8a449755a"),
                            Name = "Адыгейский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("06382053-7163-45d6-904a-8a28280198d6"),
                            Name = "Алтайский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("6d21fece-1ff7-419c-b53b-78edf2ecac1c"),
                            Name = "Башкирский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("0cfb9154-940a-4620-aa6f-5a3b2a75ab28"),
                            Name = "Бурятский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("36247347-027e-4c81-9bd3-917346a11cb0"),
                            Name = "Дагестанский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("e1d6a872-f16f-49dc-b585-26f00481882b"),
                            Name = "Ингушский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("0268e256-3077-489a-bbfb-d55ea42e67cf"),
                            Name = "Кабардино-черкесский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("2927bcbf-9e68-47af-8b9f-0d70b7f6522d"),
                            Name = "Калмыцкий язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("bdd18572-78a9-4ea5-8b4f-db1dc9325856"),
                            Name = "Карачаево-балкарский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("7f270633-104f-4d1b-9258-b56faf9d1aef"),
                            Name = "Коми язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("47346c91-8f18-4232-ba45-b2daa9b431cc"),
                            Name = "Крымскотатарский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("e5864f29-843b-4079-88ac-d93e7e430605"),
                            Name = "Марийский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("0011ac2c-f294-4241-a1dd-266bcfa01e30"),
                            Name = "Мокшанский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("5dfb23d0-ec1f-457c-aae6-34250a98808a"),
                            Name = "Ногайский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("24b5e9af-53db-4b2f-9555-920153bf79eb"),
                            Name = "Осетинский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("9f5be91f-de63-4a96-8091-0ce8c12d7bba"),
                            Name = "Татарский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("8aa95e30-fc81-4d8e-8b34-35a8a2d05c86"),
                            Name = "Тувинский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("40cc4c11-daae-49c3-a75f-9b180a7c2550"),
                            Name = "Удмуртский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("29897a68-5ec2-4326-b963-98da00bb36c8"),
                            Name = "Хакасский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("82f861cd-692c-4331-ba32-4a9aebfedf90"),
                            Name = "Чеченский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("d12c235b-adb5-4abd-af2c-16c084fba0c1"),
                            Name = "Чувашский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("86becb03-9bb4-4f8d-ae12-1db6a3b95eae"),
                            Name = "Эрзянский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        },
                        new
                        {
                            Id = new Guid("ee1183c6-8afd-4b96-ae84-e268e74e0934"),
                            Name = "Якутский язык",
                            ParentId = new Guid("aab5597d-9a56-4be9-b4ae-31b343c3ab66")
                        });
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.AboutTeacher", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.GroupLesson", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.TeacherTypeLesson", "TeacherTypeLesson")
                        .WithMany()
                        .HasForeignKey("TeacherTypeLessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeacherTypeLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.GroupLessonStudents", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.GroupLesson", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspDigitalLesson.Model.Entity.Students", "Students")
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Scheduler", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.GroupLesson", "GroupLesson")
                        .WithMany()
                        .HasForeignKey("GroupLessonId");

                    b.HasOne("AspDigitalLesson.Model.Entity.SingleLesson", "SingleLesson")
                        .WithMany()
                        .HasForeignKey("SingleLessonId");

                    b.HasOne("AspDigitalLesson.Model.Entity.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupLesson");

                    b.Navigation("SingleLesson");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.SingleLesson", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.Students", "Students")
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspDigitalLesson.Model.Entity.TeacherTypeLesson", "TeacherTypeLesson")
                        .WithMany()
                        .HasForeignKey("TeacherTypeLessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Students");

                    b.Navigation("TeacherTypeLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Students", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.SettingsStudent", "SettingsStudent")
                        .WithMany()
                        .HasForeignKey("SettingsStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SettingsStudent");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Teacher", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.SettingsTeacher", "SettingsTeacher")
                        .WithMany()
                        .HasForeignKey("SettingsTeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SettingsTeacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TeacherTypeLesson", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspDigitalLesson.Model.Entity.TypeLessons", "TypeLessons")
                        .WithMany()
                        .HasForeignKey("TypeLessonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");

                    b.Navigation("TypeLessons");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TypeLessons", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.TypeLessons", "Parent")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TypeLessons", b =>
                {
                    b.Navigation("SubCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
