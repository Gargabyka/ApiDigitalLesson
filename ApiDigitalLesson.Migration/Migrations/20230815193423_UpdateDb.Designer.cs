// <auto-generated />
using System;
using ApiDigitalLesson.Migration.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApiDigitalLesson.Migration.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230815193423_UpdateDb")]
    partial class UpdateDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.AboutTeacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("AboutTeacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.GroupLesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFinish")
                        .HasColumnType("boolean");

                    b.Property<int>("MaxQuantityStudents")
                        .HasColumnType("integer");

                    b.Property<Guid>("TeacherTypeLessonId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TypeLessonId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TeacherTypeLessonId");

                    b.ToTable("GroupLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.GroupLessonStudents", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("StudentsId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudentsId");

                    b.ToTable("GroupLessonStudents");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Scheduler", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("GroupLessonId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsWeekend")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("SingleLessonId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GroupLessonId");

                    b.HasIndex("SingleLessonId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Schedulers");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.SingleLesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFinish")
                        .HasColumnType("boolean");

                    b.Property<Guid>("StudentsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TeacherTypeLessonId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TypeLessonId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("StudentsId");

                    b.HasIndex("TeacherTypeLessonId");

                    b.ToTable("SingleLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Students", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateBirthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("TelegramId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateBirthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("bytea");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("TelegramId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TeacherTypeLesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsGroup")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOffline")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSingle")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TypeLessonsId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.HasIndex("TypeLessonsId");

                    b.ToTable("TeacherTypeLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TypeLessons", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("Category")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("TypeLessons", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("42a8a203-49b7-4921-858e-9595a55919cd"),
                            Category = 0,
                            Name = "ЕГЭ"
                        },
                        new
                        {
                            Id = new Guid("d2b8ad63-8c12-44fe-8a71-bab3d02bc952"),
                            Category = 1,
                            Name = "ОГЭ"
                        },
                        new
                        {
                            Id = new Guid("426a7082-3bb2-4bad-b228-54fc82812cc2"),
                            Category = 2,
                            Name = "Технические науки"
                        },
                        new
                        {
                            Id = new Guid("2de12b30-7f57-4902-9fe3-3604623c99b2"),
                            Category = 3,
                            Name = "Естественные науки"
                        },
                        new
                        {
                            Id = new Guid("35ffcdf6-2d49-42e1-a433-ef36339d61a2"),
                            Category = 4,
                            Name = "Гуманитарные науки"
                        },
                        new
                        {
                            Id = new Guid("d35f1417-687b-405a-8fb2-41b424390e87"),
                            Category = 5,
                            Name = "Программирование"
                        },
                        new
                        {
                            Id = new Guid("3a1b91b8-60e3-40e2-a631-9ea18ab231ca"),
                            Category = 6,
                            Name = "Школьная программа"
                        },
                        new
                        {
                            Id = new Guid("d21f782b-b4aa-46b2-aae3-3a31964390c5"),
                            Category = 7,
                            Name = "Музыка"
                        },
                        new
                        {
                            Id = new Guid("f1a86e9e-b710-4e67-b1dc-7cc9e22963f7"),
                            Category = 8,
                            Name = "Искусство"
                        },
                        new
                        {
                            Id = new Guid("32fd80bc-18a8-4b59-a981-7e4356c11fd0"),
                            Name = "Математика (базовый уровень)",
                            ParentId = new Guid("42a8a203-49b7-4921-858e-9595a55919cd")
                        },
                        new
                        {
                            Id = new Guid("1b54fa4c-23e9-44f7-bb8b-011fb249bb5b"),
                            Name = "Математика (профильный уровень)",
                            ParentId = new Guid("42a8a203-49b7-4921-858e-9595a55919cd")
                        },
                        new
                        {
                            Id = new Guid("96dae44d-4953-4d41-9997-03f1bc8f2a0c"),
                            Name = "Русский язык",
                            ParentId = new Guid("42a8a203-49b7-4921-858e-9595a55919cd")
                        },
                        new
                        {
                            Id = new Guid("19d7d9cf-e886-4bf6-b748-afcccc4d17a1"),
                            Name = "Литература",
                            ParentId = new Guid("42a8a203-49b7-4921-858e-9595a55919cd")
                        },
                        new
                        {
                            Id = new Guid("915c8f7c-3303-4db4-95c6-d80fca342e37"),
                            Name = "Физика",
                            ParentId = new Guid("42a8a203-49b7-4921-858e-9595a55919cd")
                        },
                        new
                        {
                            Id = new Guid("511ab70e-28c9-4567-95ac-d22c5bdb401d"),
                            Name = "Химия",
                            ParentId = new Guid("42a8a203-49b7-4921-858e-9595a55919cd")
                        },
                        new
                        {
                            Id = new Guid("ed2f2fc0-f6b4-4951-a836-b9a11ff57432"),
                            Name = "История",
                            ParentId = new Guid("42a8a203-49b7-4921-858e-9595a55919cd")
                        },
                        new
                        {
                            Id = new Guid("d6fa80fd-dc30-49f1-8104-2b13c9258640"),
                            Name = "Обществознание",
                            ParentId = new Guid("42a8a203-49b7-4921-858e-9595a55919cd")
                        },
                        new
                        {
                            Id = new Guid("ab897511-a01f-4e9c-bdd5-cdf9ee67e367"),
                            Name = "Информатика",
                            ParentId = new Guid("42a8a203-49b7-4921-858e-9595a55919cd")
                        },
                        new
                        {
                            Id = new Guid("02bb13f9-dad1-44c7-a576-54dd8461621f"),
                            Name = "Биология",
                            ParentId = new Guid("42a8a203-49b7-4921-858e-9595a55919cd")
                        },
                        new
                        {
                            Id = new Guid("fd77e88e-8b0e-403d-9a80-87c63db6109c"),
                            Name = "География",
                            ParentId = new Guid("42a8a203-49b7-4921-858e-9595a55919cd")
                        },
                        new
                        {
                            Id = new Guid("e6bd1511-8eba-4790-a09e-36e81443cd53"),
                            Name = "Английский язык",
                            ParentId = new Guid("42a8a203-49b7-4921-858e-9595a55919cd")
                        },
                        new
                        {
                            Id = new Guid("ace0ea94-476f-46a6-ae61-121c39359696"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("42a8a203-49b7-4921-858e-9595a55919cd")
                        },
                        new
                        {
                            Id = new Guid("4ca3c757-bb80-4a85-8214-87a6fa607caf"),
                            Name = "Французский язык",
                            ParentId = new Guid("42a8a203-49b7-4921-858e-9595a55919cd")
                        },
                        new
                        {
                            Id = new Guid("fd9c8675-71b5-48b1-911c-b5eb0435a909"),
                            Name = "Китайский язык",
                            ParentId = new Guid("42a8a203-49b7-4921-858e-9595a55919cd")
                        },
                        new
                        {
                            Id = new Guid("a53906dd-391a-4354-89a0-8ae0db05ca50"),
                            Name = "Испанский язык",
                            ParentId = new Guid("42a8a203-49b7-4921-858e-9595a55919cd")
                        },
                        new
                        {
                            Id = new Guid("d67560bf-a66a-450f-8678-bec4ba241546"),
                            Name = "География",
                            ParentId = new Guid("42a8a203-49b7-4921-858e-9595a55919cd")
                        },
                        new
                        {
                            Id = new Guid("c7c6f5c6-33c9-44c3-aa08-c4bd2d088d5b"),
                            Name = "Математика",
                            ParentId = new Guid("d2b8ad63-8c12-44fe-8a71-bab3d02bc952")
                        },
                        new
                        {
                            Id = new Guid("8f7455ab-1ec2-47bb-bbd2-c9706c7c9f59"),
                            Name = "Русский язык",
                            ParentId = new Guid("d2b8ad63-8c12-44fe-8a71-bab3d02bc952")
                        },
                        new
                        {
                            Id = new Guid("b8d95f9d-5d56-4a1b-b1b8-d1effc18a7a5"),
                            Name = "Литература",
                            ParentId = new Guid("d2b8ad63-8c12-44fe-8a71-bab3d02bc952")
                        },
                        new
                        {
                            Id = new Guid("37e383d3-f9b3-44bc-b94f-4b5622a0a04c"),
                            Name = "Физика",
                            ParentId = new Guid("d2b8ad63-8c12-44fe-8a71-bab3d02bc952")
                        },
                        new
                        {
                            Id = new Guid("e636301d-7dbb-4a35-8eb5-ed4fe1ac6fbb"),
                            Name = "Химия",
                            ParentId = new Guid("d2b8ad63-8c12-44fe-8a71-bab3d02bc952")
                        },
                        new
                        {
                            Id = new Guid("cb9179db-1b68-4c6d-bd4c-4b44d1913a73"),
                            Name = "История",
                            ParentId = new Guid("d2b8ad63-8c12-44fe-8a71-bab3d02bc952")
                        },
                        new
                        {
                            Id = new Guid("64c96e27-aa0e-41c4-a878-e225ffca442a"),
                            Name = "Обществознание",
                            ParentId = new Guid("d2b8ad63-8c12-44fe-8a71-bab3d02bc952")
                        },
                        new
                        {
                            Id = new Guid("6455774f-bd1f-458f-ab5a-53e00a73db7e"),
                            Name = "Информатика",
                            ParentId = new Guid("d2b8ad63-8c12-44fe-8a71-bab3d02bc952")
                        },
                        new
                        {
                            Id = new Guid("ab190877-65ea-4748-83af-eaccaaa19310"),
                            Name = "Биология",
                            ParentId = new Guid("d2b8ad63-8c12-44fe-8a71-bab3d02bc952")
                        },
                        new
                        {
                            Id = new Guid("ad6ae9ac-2d81-413c-b1e9-9d42d48df0be"),
                            Name = "География",
                            ParentId = new Guid("d2b8ad63-8c12-44fe-8a71-bab3d02bc952")
                        },
                        new
                        {
                            Id = new Guid("deffc480-5473-4f28-b492-2fc51166abc2"),
                            Name = "Английский язык",
                            ParentId = new Guid("d2b8ad63-8c12-44fe-8a71-bab3d02bc952")
                        },
                        new
                        {
                            Id = new Guid("229ddee2-df7b-4700-8149-80c3de42c472"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("d2b8ad63-8c12-44fe-8a71-bab3d02bc952")
                        },
                        new
                        {
                            Id = new Guid("84105acc-1daa-4957-bef7-28c00b732d56"),
                            Name = "Французский язык",
                            ParentId = new Guid("d2b8ad63-8c12-44fe-8a71-bab3d02bc952")
                        },
                        new
                        {
                            Id = new Guid("db653d3e-8bb2-44e8-b3f6-f8b33b116e4a"),
                            Name = "Китайский язык",
                            ParentId = new Guid("d2b8ad63-8c12-44fe-8a71-bab3d02bc952")
                        },
                        new
                        {
                            Id = new Guid("917f137e-db79-4deb-a92e-b94ff5d67e02"),
                            Name = "Испанский язык",
                            ParentId = new Guid("d2b8ad63-8c12-44fe-8a71-bab3d02bc952")
                        },
                        new
                        {
                            Id = new Guid("85caa087-b2e5-4893-bcda-095711631279"),
                            Name = "География",
                            ParentId = new Guid("d2b8ad63-8c12-44fe-8a71-bab3d02bc952")
                        },
                        new
                        {
                            Id = new Guid("f55039f4-9a0e-474d-9489-f5aa457b7b3d"),
                            Name = "1-4 класс"
                        },
                        new
                        {
                            Id = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d"),
                            Name = "5-9 класс"
                        },
                        new
                        {
                            Id = new Guid("6a31ef96-65ef-4374-92ec-a148d319ef87"),
                            Name = "9-11 класс"
                        },
                        new
                        {
                            Id = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7"),
                            Name = "Народные языки"
                        },
                        new
                        {
                            Id = new Guid("5dcc2774-7a91-454d-b718-06c7030258c6"),
                            Name = "Русский язык",
                            ParentId = new Guid("f55039f4-9a0e-474d-9489-f5aa457b7b3d")
                        },
                        new
                        {
                            Id = new Guid("5d9f22c5-8673-4cd4-b0f2-c0634d50d53d"),
                            Name = "Литературное чтение",
                            ParentId = new Guid("f55039f4-9a0e-474d-9489-f5aa457b7b3d")
                        },
                        new
                        {
                            Id = new Guid("fea94234-edea-4a13-b00e-bc01498e1eee"),
                            Name = "Математика",
                            ParentId = new Guid("f55039f4-9a0e-474d-9489-f5aa457b7b3d")
                        },
                        new
                        {
                            Id = new Guid("7ad0664c-5c43-433a-858f-44091265dc64"),
                            Name = "Обществознание",
                            ParentId = new Guid("f55039f4-9a0e-474d-9489-f5aa457b7b3d")
                        },
                        new
                        {
                            Id = new Guid("043c58ed-7607-42d4-8953-caf2031030da"),
                            Name = "Окружающий мир",
                            ParentId = new Guid("f55039f4-9a0e-474d-9489-f5aa457b7b3d")
                        },
                        new
                        {
                            Id = new Guid("5e250439-cb76-41f7-9044-52d3c322ddb6"),
                            Name = "ИЗО",
                            ParentId = new Guid("f55039f4-9a0e-474d-9489-f5aa457b7b3d")
                        },
                        new
                        {
                            Id = new Guid("d5fa6267-4618-4c33-8dd7-ebdaec412c37"),
                            Name = "Музыка",
                            ParentId = new Guid("f55039f4-9a0e-474d-9489-f5aa457b7b3d")
                        },
                        new
                        {
                            Id = new Guid("75ee725e-9f12-42fc-98a6-d98ce92526f3"),
                            Name = "Технология",
                            ParentId = new Guid("f55039f4-9a0e-474d-9489-f5aa457b7b3d")
                        },
                        new
                        {
                            Id = new Guid("1d5a3440-9025-4c15-ba37-041ad768b704"),
                            Name = "Физическая культура",
                            ParentId = new Guid("f55039f4-9a0e-474d-9489-f5aa457b7b3d")
                        },
                        new
                        {
                            Id = new Guid("5bb7891d-7d51-484c-a867-1bb358327379"),
                            Name = "Английский язык",
                            ParentId = new Guid("f55039f4-9a0e-474d-9489-f5aa457b7b3d")
                        },
                        new
                        {
                            Id = new Guid("37c64024-08bc-4cd8-9197-998974eb3003"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("f55039f4-9a0e-474d-9489-f5aa457b7b3d")
                        },
                        new
                        {
                            Id = new Guid("c17d7f74-4d06-4fd8-a026-4d46d18f1fb2"),
                            Name = "Французский язык",
                            ParentId = new Guid("f55039f4-9a0e-474d-9489-f5aa457b7b3d")
                        },
                        new
                        {
                            Id = new Guid("e7178cee-f98e-4ee2-bd53-3c276942a05c"),
                            Name = "Испанский язык",
                            ParentId = new Guid("f55039f4-9a0e-474d-9489-f5aa457b7b3d")
                        },
                        new
                        {
                            Id = new Guid("478475c1-860e-4880-8d8c-578321004fdd"),
                            Name = "Китайский язык",
                            ParentId = new Guid("f55039f4-9a0e-474d-9489-f5aa457b7b3d")
                        },
                        new
                        {
                            Id = new Guid("8ddb4df4-57a6-4f22-ac4b-01e488b77a74"),
                            Name = "Русский язык",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("181abcd0-30c8-4558-af39-3348b942d90e"),
                            Name = "Литература",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("cf4ca805-fd67-4161-94cf-763f39066728"),
                            Name = "История",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("40184b43-18f9-449a-9f83-b84fe25eb3f8"),
                            Name = "Обществознание",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("1bf2a9b5-d38d-45e3-bd03-d2fe87e304a2"),
                            Name = "География",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("b1c28c45-da57-40c2-8f87-d5f2a301e516"),
                            Name = "Алгебра",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("20a97602-0a37-4bf1-990d-d3e26f07e6a7"),
                            Name = "Геометрия",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("9c184d9c-929d-49b1-9fb1-784698cd7deb"),
                            Name = "Информатика",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("e59bef05-232e-4501-b920-f4f25de291f9"),
                            Name = "Основы духовно-нравственной культуры народов России",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("5abce06d-eae7-4c88-8979-1eaeb1e8d9ed"),
                            Name = "Основы религиозных культур и светской этики",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("0622dc43-1653-4da1-802a-e7fd559cf0cc"),
                            Name = "Физика",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("f3de2cb3-ff48-4f75-a1cf-890d2a19b448"),
                            Name = "Биология",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("64c931d7-c0c8-4f7c-ac3b-8756170ab254"),
                            Name = "Химия",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("e20e2fda-3f14-4208-b235-8b636d80d179"),
                            Name = "Изобразительное искусство",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("159df42f-45e7-484e-9001-424650b1f57e"),
                            Name = "Музыка",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("b03dd44b-be78-4a11-b144-58fd3a681a78"),
                            Name = "Технология",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("42e4f151-6926-4a93-835e-01ec1c409723"),
                            Name = "Физическая культура",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("eda805ba-8645-491f-83bd-08b19150698c"),
                            Name = "Основы безопасности жизнедеятельности",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("88a64a81-728c-422f-8828-3c5636fdf152"),
                            Name = "Английский язык",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("1201a51a-ffba-4204-a3c4-0ee22fd217f3"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("dd833fc5-f5bd-4aa3-9b93-6b3027e54557"),
                            Name = "Французский язык",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("6cb6b098-9a41-4bc2-a5dd-0aa81686b19b"),
                            Name = "Испанский язык",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("719d471d-ce71-4a7f-8130-9a695e18d59c"),
                            Name = "Китайский язык",
                            ParentId = new Guid("fbb6e163-06a5-4f9c-b239-5335424c6f1d")
                        },
                        new
                        {
                            Id = new Guid("6d16c66c-a695-4fde-b7e7-4757d2f211d0"),
                            Name = "Алгебра",
                            ParentId = new Guid("6a31ef96-65ef-4374-92ec-a148d319ef87")
                        },
                        new
                        {
                            Id = new Guid("d790417f-f041-4443-b281-995d5b2c08af"),
                            Name = "Геометрия",
                            ParentId = new Guid("6a31ef96-65ef-4374-92ec-a148d319ef87")
                        },
                        new
                        {
                            Id = new Guid("83f8c620-e84d-4a4f-abda-65993b27ea34"),
                            Name = "Русский язык",
                            ParentId = new Guid("6a31ef96-65ef-4374-92ec-a148d319ef87")
                        },
                        new
                        {
                            Id = new Guid("e774e559-fb16-436e-b590-b0f5ccfe955b"),
                            Name = "Литература",
                            ParentId = new Guid("6a31ef96-65ef-4374-92ec-a148d319ef87")
                        },
                        new
                        {
                            Id = new Guid("7a9d089d-046b-4778-90ea-642ba5df5bff"),
                            Name = "Всеобщая история",
                            ParentId = new Guid("6a31ef96-65ef-4374-92ec-a148d319ef87")
                        },
                        new
                        {
                            Id = new Guid("4ff456ef-777b-47c6-8398-7443edd8e89f"),
                            Name = "История России",
                            ParentId = new Guid("6a31ef96-65ef-4374-92ec-a148d319ef87")
                        },
                        new
                        {
                            Id = new Guid("4fb54f00-2522-47a4-a762-fb7b4e55599c"),
                            Name = "Обществознание",
                            ParentId = new Guid("6a31ef96-65ef-4374-92ec-a148d319ef87")
                        },
                        new
                        {
                            Id = new Guid("0e4e6210-73d1-42ea-b44e-3f095049e1af"),
                            Name = "Черчение",
                            ParentId = new Guid("6a31ef96-65ef-4374-92ec-a148d319ef87")
                        },
                        new
                        {
                            Id = new Guid("3ab73ff1-ed51-45b4-9534-2674eb259e0d"),
                            Name = "Основы безопасности и жизнедеятельности",
                            ParentId = new Guid("6a31ef96-65ef-4374-92ec-a148d319ef87")
                        },
                        new
                        {
                            Id = new Guid("ebd321cb-890b-45f9-b3c1-f05fee644d76"),
                            Name = "Информатика",
                            ParentId = new Guid("6a31ef96-65ef-4374-92ec-a148d319ef87")
                        },
                        new
                        {
                            Id = new Guid("fa436399-4a5d-493a-99bc-86aba47321ea"),
                            Name = "География",
                            ParentId = new Guid("6a31ef96-65ef-4374-92ec-a148d319ef87")
                        },
                        new
                        {
                            Id = new Guid("48318c56-2ec5-45a5-aca7-91b0eb91b1c1"),
                            Name = "Физическая культура",
                            ParentId = new Guid("6a31ef96-65ef-4374-92ec-a148d319ef87")
                        },
                        new
                        {
                            Id = new Guid("fe5b890c-43b7-4ba0-8f08-6bc7fd1a96ef"),
                            Name = "Биология",
                            ParentId = new Guid("6a31ef96-65ef-4374-92ec-a148d319ef87")
                        },
                        new
                        {
                            Id = new Guid("ae078002-9947-4820-8bf9-89dc3c0dc545"),
                            Name = "Физика",
                            ParentId = new Guid("6a31ef96-65ef-4374-92ec-a148d319ef87")
                        },
                        new
                        {
                            Id = new Guid("b9c657bf-3436-47c7-a97b-f13cf1492c45"),
                            Name = "Химия",
                            ParentId = new Guid("6a31ef96-65ef-4374-92ec-a148d319ef87")
                        },
                        new
                        {
                            Id = new Guid("c310b525-4abc-42eb-8107-8bbf57a0b326"),
                            Name = "Английский язык",
                            ParentId = new Guid("6a31ef96-65ef-4374-92ec-a148d319ef87")
                        },
                        new
                        {
                            Id = new Guid("98daad99-f681-4da1-8099-241187dde434"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("6a31ef96-65ef-4374-92ec-a148d319ef87")
                        },
                        new
                        {
                            Id = new Guid("e424cebd-b3c4-4294-9663-43c49ae71328"),
                            Name = "Французский язык",
                            ParentId = new Guid("6a31ef96-65ef-4374-92ec-a148d319ef87")
                        },
                        new
                        {
                            Id = new Guid("2407a84c-ace2-4ed0-9988-27646e15e8c9"),
                            Name = "Испанский язык",
                            ParentId = new Guid("6a31ef96-65ef-4374-92ec-a148d319ef87")
                        },
                        new
                        {
                            Id = new Guid("36993b87-f087-4c2b-8019-fb6057d97812"),
                            Name = "Китайский язык",
                            ParentId = new Guid("6a31ef96-65ef-4374-92ec-a148d319ef87")
                        },
                        new
                        {
                            Id = new Guid("283cfd45-079e-48a9-92cd-ce2873299bc2"),
                            Name = "Абазинский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("de7e4f15-7e4d-4d82-8e76-edf61b11e9e9"),
                            Name = "Адыгейский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("9bec0c14-2be3-4711-b670-8e58bd57fd23"),
                            Name = "Алтайский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("9a65c8ef-4cc9-42f5-bd37-1c736a4a9366"),
                            Name = "Башкирский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("428da5c4-983d-43be-8231-bcc4896e24d5"),
                            Name = "Бурятский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("78c4496f-39ce-40f9-9c20-2e3f825557f2"),
                            Name = "Дагестанский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("d33fdb80-a350-4be7-8171-153bb5a03a4f"),
                            Name = "Ингушский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("0fbc697f-436c-4fce-9106-1d08f2ecf060"),
                            Name = "Кабардино-черкесский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("dc1b7d51-4a5d-4508-8e80-bc1ca19d87ac"),
                            Name = "Калмыцкий язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("2168215a-5ec1-4150-8940-6bdbfb33f369"),
                            Name = "Карачаево-балкарский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("39daa950-43e9-459c-968b-ff38477df96f"),
                            Name = "Коми язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("671630f6-7400-4e11-8a0f-7cee4d939392"),
                            Name = "Крымскотатарский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("e65023f0-b8a4-495a-bd2b-558c8d163460"),
                            Name = "Марийский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("95cfc72e-1363-47bc-b68f-21d08cfe4ab1"),
                            Name = "Мокшанский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("7ef519f6-53d6-4db4-8591-f78b5cd6cfb0"),
                            Name = "Ногайский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("302e9a24-6dd6-4f86-baf5-5a9374496e64"),
                            Name = "Осетинский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("38c9b850-e887-4817-8f38-8eb133a8e7f5"),
                            Name = "Татарский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("43fa31fb-9959-4e26-9085-af80626e4cf4"),
                            Name = "Тувинский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("ede48466-da0f-4fa1-ab36-38b8ba43e0a1"),
                            Name = "Удмуртский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("2418a86c-126e-4af8-b91d-55ecb9f62245"),
                            Name = "Хакасский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("8ded9a20-7efc-4764-a589-388a2aaea0e2"),
                            Name = "Чеченский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("5a7b16a8-070f-483a-8f29-ad163ea29cab"),
                            Name = "Чувашский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("c85f0954-4a0e-413c-b898-03c148279f27"),
                            Name = "Эрзянский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        },
                        new
                        {
                            Id = new Guid("45ff0816-cbe4-4ddd-915a-cf1d8dbb367e"),
                            Name = "Якутский язык",
                            ParentId = new Guid("91814020-70b8-4fd0-8e1a-f7ef9c9e71f7")
                        });
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.AboutTeacher", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.GroupLesson", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.TeacherTypeLesson", "TeacherTypeLesson")
                        .WithMany()
                        .HasForeignKey("TeacherTypeLessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeacherTypeLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.GroupLessonStudents", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.GroupLesson", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspDigitalLesson.Model.Entity.Students", "Students")
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Scheduler", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.GroupLesson", "GroupLesson")
                        .WithMany()
                        .HasForeignKey("GroupLessonId");

                    b.HasOne("AspDigitalLesson.Model.Entity.SingleLesson", "SingleLesson")
                        .WithMany()
                        .HasForeignKey("SingleLessonId");

                    b.HasOne("AspDigitalLesson.Model.Entity.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupLesson");

                    b.Navigation("SingleLesson");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.SingleLesson", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.Students", "Students")
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspDigitalLesson.Model.Entity.TeacherTypeLesson", "TeacherTypeLesson")
                        .WithMany()
                        .HasForeignKey("TeacherTypeLessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Students");

                    b.Navigation("TeacherTypeLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TeacherTypeLesson", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspDigitalLesson.Model.Entity.TypeLessons", "TypeLessons")
                        .WithMany()
                        .HasForeignKey("TypeLessonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");

                    b.Navigation("TypeLessons");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TypeLessons", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.TypeLessons", "Parent")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TypeLessons", b =>
                {
                    b.Navigation("SubCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
