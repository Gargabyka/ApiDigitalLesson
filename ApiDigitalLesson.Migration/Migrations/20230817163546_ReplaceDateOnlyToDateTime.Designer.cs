// <auto-generated />
using System;
using ApiDigitalLesson.Migration.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApiDigitalLesson.Migration.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230817163546_ReplaceDateOnlyToDateTime")]
    partial class ReplaceDateOnlyToDateTime
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.AboutTeacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("AboutTeacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.GroupLesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFinish")
                        .HasColumnType("boolean");

                    b.Property<int>("MaxQuantityStudents")
                        .HasColumnType("integer");

                    b.Property<Guid>("TeacherTypeLessonId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TypeLessonId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TeacherTypeLessonId");

                    b.ToTable("GroupLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.GroupLessonStudents", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("StudentsId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudentsId");

                    b.ToTable("GroupLessonStudents");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Scheduler", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("GroupLessonId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsWeekend")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("SingleLessonId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GroupLessonId");

                    b.HasIndex("SingleLessonId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Schedulers");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.SettingsStudent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAcceptForLessonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAcceptForLessonTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAllowCreateLesson")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLessonComingSoonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLessonComingSoonTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotificationEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotificationTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequestForLessonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequestForLessonTelegram")
                        .HasColumnType("boolean");

                    b.Property<int>("TimeBeforeLesson")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SettingsStudent");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.SettingsTeacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAcceptForLessonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAcceptForLessonTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAllowCreateLesson")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLessonComingSoonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLessonComingSoonTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotificationEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotificationTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequestForLessonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequestForLessonTelegram")
                        .HasColumnType("boolean");

                    b.Property<int>("TimeBeforeLesson")
                        .HasColumnType("integer");

                    b.Property<int>("TimeCancelLesson")
                        .HasColumnType("integer");

                    b.Property<int>("TimeCreateLesson")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SettingsTeacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.SingleLesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFinish")
                        .HasColumnType("boolean");

                    b.Property<Guid>("StudentsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TeacherTypeLessonId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TypeLessonId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("StudentsId");

                    b.HasIndex("TeacherTypeLessonId");

                    b.ToTable("SingleLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Students", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateBirthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<Guid>("SettingsStudentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("TelegramId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SettingsStudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateBirthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("bytea");

                    b.Property<Guid>("SettingsTeacherId")
                        .HasColumnType("uuid");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("TelegramId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SettingsTeacherId");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TeacherTypeLesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsGroup")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOffline")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSingle")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TypeLessonsId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.HasIndex("TypeLessonsId");

                    b.ToTable("TeacherTypeLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TypeLessons", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("Category")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("TypeLessons", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a8f28f88-ebc5-4314-9c15-f2b9602a191e"),
                            Category = 0,
                            Name = "ЕГЭ"
                        },
                        new
                        {
                            Id = new Guid("01a91034-5e58-4b58-89c2-faf062eed3d7"),
                            Category = 1,
                            Name = "ОГЭ"
                        },
                        new
                        {
                            Id = new Guid("99548a47-fb5b-40c0-914f-0bbf259e3484"),
                            Category = 2,
                            Name = "Технические науки"
                        },
                        new
                        {
                            Id = new Guid("75d35df9-b838-4101-8c38-1e5c27e24fbf"),
                            Category = 3,
                            Name = "Естественные науки"
                        },
                        new
                        {
                            Id = new Guid("47116702-7301-4d25-ba45-6a16d13ae109"),
                            Category = 4,
                            Name = "Гуманитарные науки"
                        },
                        new
                        {
                            Id = new Guid("ca6835b0-4cf4-4cc7-84dd-49a0596950e8"),
                            Category = 5,
                            Name = "Программирование"
                        },
                        new
                        {
                            Id = new Guid("2b3132bf-cf29-4569-a9a3-19528b3f6196"),
                            Category = 6,
                            Name = "Школьная программа"
                        },
                        new
                        {
                            Id = new Guid("e671eaf1-f68e-476b-ba99-bc946f3a99b8"),
                            Category = 7,
                            Name = "Музыка"
                        },
                        new
                        {
                            Id = new Guid("aaf4967f-d0fb-4c07-b812-a2d90ebf7d6f"),
                            Category = 8,
                            Name = "Искусство"
                        },
                        new
                        {
                            Id = new Guid("b856ae56-a5a3-4edf-a1a5-c8b47348ae95"),
                            Name = "Математика (базовый уровень)",
                            ParentId = new Guid("a8f28f88-ebc5-4314-9c15-f2b9602a191e")
                        },
                        new
                        {
                            Id = new Guid("e54ae0a3-2373-4899-83dc-76e91993c194"),
                            Name = "Математика (профильный уровень)",
                            ParentId = new Guid("a8f28f88-ebc5-4314-9c15-f2b9602a191e")
                        },
                        new
                        {
                            Id = new Guid("23221583-4e31-44f1-a345-863ba3515a09"),
                            Name = "Русский язык",
                            ParentId = new Guid("a8f28f88-ebc5-4314-9c15-f2b9602a191e")
                        },
                        new
                        {
                            Id = new Guid("a5136936-6e3f-4bfc-bc57-0dab989c734e"),
                            Name = "Литература",
                            ParentId = new Guid("a8f28f88-ebc5-4314-9c15-f2b9602a191e")
                        },
                        new
                        {
                            Id = new Guid("c1952e80-3eaa-40a4-ba80-75e4e17571c1"),
                            Name = "Физика",
                            ParentId = new Guid("a8f28f88-ebc5-4314-9c15-f2b9602a191e")
                        },
                        new
                        {
                            Id = new Guid("be4df5a7-8741-43ee-9157-d58ee14237b8"),
                            Name = "Химия",
                            ParentId = new Guid("a8f28f88-ebc5-4314-9c15-f2b9602a191e")
                        },
                        new
                        {
                            Id = new Guid("3ad52ae2-df87-499b-b2a0-7f4f8e2929e4"),
                            Name = "История",
                            ParentId = new Guid("a8f28f88-ebc5-4314-9c15-f2b9602a191e")
                        },
                        new
                        {
                            Id = new Guid("16ae6f71-87d5-4a5c-a688-862e5b972ee9"),
                            Name = "Обществознание",
                            ParentId = new Guid("a8f28f88-ebc5-4314-9c15-f2b9602a191e")
                        },
                        new
                        {
                            Id = new Guid("c1fc8f18-655e-4ccc-8eae-fdf2ce4659e9"),
                            Name = "Информатика",
                            ParentId = new Guid("a8f28f88-ebc5-4314-9c15-f2b9602a191e")
                        },
                        new
                        {
                            Id = new Guid("bf485cf7-f4f2-47ed-8aa9-387238efc878"),
                            Name = "Биология",
                            ParentId = new Guid("a8f28f88-ebc5-4314-9c15-f2b9602a191e")
                        },
                        new
                        {
                            Id = new Guid("fee5977c-07a8-4aa0-af63-63b7ee22bac4"),
                            Name = "География",
                            ParentId = new Guid("a8f28f88-ebc5-4314-9c15-f2b9602a191e")
                        },
                        new
                        {
                            Id = new Guid("df5c6151-d5e7-4d66-91b4-53c3c4e9e9d4"),
                            Name = "Английский язык",
                            ParentId = new Guid("a8f28f88-ebc5-4314-9c15-f2b9602a191e")
                        },
                        new
                        {
                            Id = new Guid("8ee5a3f5-9e7d-4234-9a1c-33da7f4e561b"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("a8f28f88-ebc5-4314-9c15-f2b9602a191e")
                        },
                        new
                        {
                            Id = new Guid("00fb379e-aa17-45b5-8294-eecee2f63735"),
                            Name = "Французский язык",
                            ParentId = new Guid("a8f28f88-ebc5-4314-9c15-f2b9602a191e")
                        },
                        new
                        {
                            Id = new Guid("3c245e00-0a8a-4fad-8778-2f51ab8a7078"),
                            Name = "Китайский язык",
                            ParentId = new Guid("a8f28f88-ebc5-4314-9c15-f2b9602a191e")
                        },
                        new
                        {
                            Id = new Guid("d605bec7-2b98-4860-9cf4-a688d2550fb0"),
                            Name = "Испанский язык",
                            ParentId = new Guid("a8f28f88-ebc5-4314-9c15-f2b9602a191e")
                        },
                        new
                        {
                            Id = new Guid("485b1dbf-63fd-4409-80ea-c68474ca4625"),
                            Name = "География",
                            ParentId = new Guid("a8f28f88-ebc5-4314-9c15-f2b9602a191e")
                        },
                        new
                        {
                            Id = new Guid("1102b1bc-0309-4c6c-bf9b-affa5e29df65"),
                            Name = "Математика",
                            ParentId = new Guid("01a91034-5e58-4b58-89c2-faf062eed3d7")
                        },
                        new
                        {
                            Id = new Guid("6dd3c2bd-c704-49a4-9560-15c8e2c2c47c"),
                            Name = "Русский язык",
                            ParentId = new Guid("01a91034-5e58-4b58-89c2-faf062eed3d7")
                        },
                        new
                        {
                            Id = new Guid("855d7ca0-3e41-4ff0-816b-0e8aa83d9863"),
                            Name = "Литература",
                            ParentId = new Guid("01a91034-5e58-4b58-89c2-faf062eed3d7")
                        },
                        new
                        {
                            Id = new Guid("84ad7bb2-effd-49d1-b0a1-2ad49680cf4a"),
                            Name = "Физика",
                            ParentId = new Guid("01a91034-5e58-4b58-89c2-faf062eed3d7")
                        },
                        new
                        {
                            Id = new Guid("dfc96a33-2d44-45ff-af8e-26c36780f41e"),
                            Name = "Химия",
                            ParentId = new Guid("01a91034-5e58-4b58-89c2-faf062eed3d7")
                        },
                        new
                        {
                            Id = new Guid("2d0132a8-3960-4600-9fa2-d591a3366936"),
                            Name = "История",
                            ParentId = new Guid("01a91034-5e58-4b58-89c2-faf062eed3d7")
                        },
                        new
                        {
                            Id = new Guid("e22d7336-4ead-44cc-bf4d-90b73a0e924a"),
                            Name = "Обществознание",
                            ParentId = new Guid("01a91034-5e58-4b58-89c2-faf062eed3d7")
                        },
                        new
                        {
                            Id = new Guid("ad8387c8-75c0-45e3-8252-1fb5d6f5a38b"),
                            Name = "Информатика",
                            ParentId = new Guid("01a91034-5e58-4b58-89c2-faf062eed3d7")
                        },
                        new
                        {
                            Id = new Guid("a044e007-8b86-453a-87d3-552e0f812da5"),
                            Name = "Биология",
                            ParentId = new Guid("01a91034-5e58-4b58-89c2-faf062eed3d7")
                        },
                        new
                        {
                            Id = new Guid("8d32acd2-c31a-4666-8569-ffde5d353709"),
                            Name = "География",
                            ParentId = new Guid("01a91034-5e58-4b58-89c2-faf062eed3d7")
                        },
                        new
                        {
                            Id = new Guid("46ed4923-40a3-4ab9-9efd-f4ad111f4f6a"),
                            Name = "Английский язык",
                            ParentId = new Guid("01a91034-5e58-4b58-89c2-faf062eed3d7")
                        },
                        new
                        {
                            Id = new Guid("a67d3ed3-cf97-4aa3-9a2b-a89ada98cdfb"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("01a91034-5e58-4b58-89c2-faf062eed3d7")
                        },
                        new
                        {
                            Id = new Guid("292b7f75-1092-4827-9b49-5d87d4d7f4d8"),
                            Name = "Французский язык",
                            ParentId = new Guid("01a91034-5e58-4b58-89c2-faf062eed3d7")
                        },
                        new
                        {
                            Id = new Guid("d4e34dfe-3863-40dd-bf2b-de11e6985cfd"),
                            Name = "Китайский язык",
                            ParentId = new Guid("01a91034-5e58-4b58-89c2-faf062eed3d7")
                        },
                        new
                        {
                            Id = new Guid("71c6e33d-bbf0-43de-89d1-4c3655887ebf"),
                            Name = "Испанский язык",
                            ParentId = new Guid("01a91034-5e58-4b58-89c2-faf062eed3d7")
                        },
                        new
                        {
                            Id = new Guid("d78a0d39-cdc0-4ec6-9077-d411379ecd96"),
                            Name = "География",
                            ParentId = new Guid("01a91034-5e58-4b58-89c2-faf062eed3d7")
                        },
                        new
                        {
                            Id = new Guid("165c2d31-2bec-4a6e-aa3a-c5b9ea4667af"),
                            Name = "1-4 класс",
                            ParentId = new Guid("2b3132bf-cf29-4569-a9a3-19528b3f6196")
                        },
                        new
                        {
                            Id = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af"),
                            Name = "5-9 класс",
                            ParentId = new Guid("2b3132bf-cf29-4569-a9a3-19528b3f6196")
                        },
                        new
                        {
                            Id = new Guid("c8f70d8d-f10d-4b0f-afe8-3ecc0b56db33"),
                            Name = "9-11 класс",
                            ParentId = new Guid("2b3132bf-cf29-4569-a9a3-19528b3f6196")
                        },
                        new
                        {
                            Id = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4"),
                            Name = "Народные языки",
                            ParentId = new Guid("2b3132bf-cf29-4569-a9a3-19528b3f6196")
                        },
                        new
                        {
                            Id = new Guid("490a1d6e-2523-4b90-b23b-8b9020d4ad72"),
                            Name = "Русский язык",
                            ParentId = new Guid("165c2d31-2bec-4a6e-aa3a-c5b9ea4667af")
                        },
                        new
                        {
                            Id = new Guid("0d2607db-83f9-4802-8823-b0c29dab4e3b"),
                            Name = "Литературное чтение",
                            ParentId = new Guid("165c2d31-2bec-4a6e-aa3a-c5b9ea4667af")
                        },
                        new
                        {
                            Id = new Guid("1ed64895-d942-4ef1-a66f-ba487472374d"),
                            Name = "Математика",
                            ParentId = new Guid("165c2d31-2bec-4a6e-aa3a-c5b9ea4667af")
                        },
                        new
                        {
                            Id = new Guid("c5cb4c49-5332-49e8-86ec-70912574653b"),
                            Name = "Обществознание",
                            ParentId = new Guid("165c2d31-2bec-4a6e-aa3a-c5b9ea4667af")
                        },
                        new
                        {
                            Id = new Guid("1f2b1cc2-f7ba-4958-8c64-dd1d17100aa9"),
                            Name = "Окружающий мир",
                            ParentId = new Guid("165c2d31-2bec-4a6e-aa3a-c5b9ea4667af")
                        },
                        new
                        {
                            Id = new Guid("8075827b-26dc-432a-8b48-c69546e60810"),
                            Name = "ИЗО",
                            ParentId = new Guid("165c2d31-2bec-4a6e-aa3a-c5b9ea4667af")
                        },
                        new
                        {
                            Id = new Guid("2ecfc2da-130e-434c-8cc7-208aafd97782"),
                            Name = "Музыка",
                            ParentId = new Guid("165c2d31-2bec-4a6e-aa3a-c5b9ea4667af")
                        },
                        new
                        {
                            Id = new Guid("164fcc6b-709f-4447-8b14-5882dcbcb142"),
                            Name = "Технология",
                            ParentId = new Guid("165c2d31-2bec-4a6e-aa3a-c5b9ea4667af")
                        },
                        new
                        {
                            Id = new Guid("f0d059e5-2ed9-4497-bde2-d16e87157a63"),
                            Name = "Физическая культура",
                            ParentId = new Guid("165c2d31-2bec-4a6e-aa3a-c5b9ea4667af")
                        },
                        new
                        {
                            Id = new Guid("b369b6db-2e96-427f-bf90-55ad3a85f687"),
                            Name = "Английский язык",
                            ParentId = new Guid("165c2d31-2bec-4a6e-aa3a-c5b9ea4667af")
                        },
                        new
                        {
                            Id = new Guid("5780e65a-2413-4e93-9fef-2680a0e74f74"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("165c2d31-2bec-4a6e-aa3a-c5b9ea4667af")
                        },
                        new
                        {
                            Id = new Guid("4c06cd4f-183b-41ef-b05d-40d2c6ed2a84"),
                            Name = "Французский язык",
                            ParentId = new Guid("165c2d31-2bec-4a6e-aa3a-c5b9ea4667af")
                        },
                        new
                        {
                            Id = new Guid("ba77e7ac-a3e6-4bfd-9a00-4acba329d70d"),
                            Name = "Испанский язык",
                            ParentId = new Guid("165c2d31-2bec-4a6e-aa3a-c5b9ea4667af")
                        },
                        new
                        {
                            Id = new Guid("344ee67f-b13d-4cae-97d5-1f56019afa88"),
                            Name = "Китайский язык",
                            ParentId = new Guid("165c2d31-2bec-4a6e-aa3a-c5b9ea4667af")
                        },
                        new
                        {
                            Id = new Guid("be2008e4-12d6-4873-8abe-3638d8e56f44"),
                            Name = "Русский язык",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("8f5d054e-bff0-4f68-a44d-7e4b28f19807"),
                            Name = "Литература",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("afafb000-5a60-4243-a2ba-3306a5068d9d"),
                            Name = "История",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("253d3b7e-2bd1-40d0-a16a-32b139591a5c"),
                            Name = "Обществознание",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("4eaa8de0-9468-4f42-961b-a9fe4d22ca79"),
                            Name = "География",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("c8959969-8a98-44d4-920e-3587a5003df8"),
                            Name = "Алгебра",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("cfe437fb-eb7c-49b8-bbb9-66282bdeb388"),
                            Name = "Геометрия",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("1f02d0e2-906f-4ac4-90ba-130abb83edfd"),
                            Name = "Информатика",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("74f652c1-e090-4100-adb7-1a66f345b336"),
                            Name = "Основы духовно-нравственной культуры народов России",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("431c6ba3-bc64-4035-9869-f8308405dedb"),
                            Name = "Основы религиозных культур и светской этики",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("ce955f13-ccdd-4ac5-9c95-8c82fc239ad8"),
                            Name = "Физика",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("3909e559-b3e9-4d2c-ae18-3c9731aca6a2"),
                            Name = "Биология",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("92ca0b32-a0d2-4a8b-b7ce-78177c1e132c"),
                            Name = "Химия",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("8f167f9a-09da-4a5b-82b0-a2bcc849047f"),
                            Name = "Изобразительное искусство",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("95fe2f1a-db70-4013-9bae-c235ddde7367"),
                            Name = "Музыка",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("04aa1506-33a2-4cda-a71f-aea2ee0e93c4"),
                            Name = "Технология",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("2006004c-5bf4-4c3a-8569-1cf6616fc3bb"),
                            Name = "Физическая культура",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("687a83f6-311d-4c4a-82c9-376b3ce0c580"),
                            Name = "Основы безопасности жизнедеятельности",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("4684cfc8-ab0c-4652-b6a3-ef2b805ce55e"),
                            Name = "Английский язык",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("dd9ececc-f132-40d8-9cdb-040317e8f4f8"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("6ac497ea-664f-4c46-993e-3464aa439d7c"),
                            Name = "Французский язык",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("5a7d6f43-3c24-438e-9115-0e0221c2b8b7"),
                            Name = "Испанский язык",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("d2862184-0930-4086-8053-8e4789dfecd4"),
                            Name = "Китайский язык",
                            ParentId = new Guid("fda5cce1-d62a-40da-a41f-045dce2ec9af")
                        },
                        new
                        {
                            Id = new Guid("973e3947-3a27-49a1-88a6-f1abfe21d2cb"),
                            Name = "Алгебра",
                            ParentId = new Guid("c8f70d8d-f10d-4b0f-afe8-3ecc0b56db33")
                        },
                        new
                        {
                            Id = new Guid("b0f3ec6b-c54c-4ade-a63c-2ab4472e1487"),
                            Name = "Геометрия",
                            ParentId = new Guid("c8f70d8d-f10d-4b0f-afe8-3ecc0b56db33")
                        },
                        new
                        {
                            Id = new Guid("a7acf2b5-6331-48e7-9556-6cd4ed559bfa"),
                            Name = "Русский язык",
                            ParentId = new Guid("c8f70d8d-f10d-4b0f-afe8-3ecc0b56db33")
                        },
                        new
                        {
                            Id = new Guid("ac58c912-3192-454f-b427-6334e1167d8a"),
                            Name = "Литература",
                            ParentId = new Guid("c8f70d8d-f10d-4b0f-afe8-3ecc0b56db33")
                        },
                        new
                        {
                            Id = new Guid("07f2dbc4-87ea-4aa1-bb4a-76e788b6a3b3"),
                            Name = "Всеобщая история",
                            ParentId = new Guid("c8f70d8d-f10d-4b0f-afe8-3ecc0b56db33")
                        },
                        new
                        {
                            Id = new Guid("7022f9d7-cc8c-436b-8317-d34eee2d75f4"),
                            Name = "История России",
                            ParentId = new Guid("c8f70d8d-f10d-4b0f-afe8-3ecc0b56db33")
                        },
                        new
                        {
                            Id = new Guid("77b26d88-a100-4757-aa79-f213f66c2df7"),
                            Name = "Обществознание",
                            ParentId = new Guid("c8f70d8d-f10d-4b0f-afe8-3ecc0b56db33")
                        },
                        new
                        {
                            Id = new Guid("d940dbd6-36ab-427d-9eb8-a420bc647e23"),
                            Name = "Черчение",
                            ParentId = new Guid("c8f70d8d-f10d-4b0f-afe8-3ecc0b56db33")
                        },
                        new
                        {
                            Id = new Guid("bb4e891a-a6b8-4f17-b958-61a79c9e70d4"),
                            Name = "Основы безопасности и жизнедеятельности",
                            ParentId = new Guid("c8f70d8d-f10d-4b0f-afe8-3ecc0b56db33")
                        },
                        new
                        {
                            Id = new Guid("e31e27b1-8f6c-43e7-bbeb-24804d4f9946"),
                            Name = "Информатика",
                            ParentId = new Guid("c8f70d8d-f10d-4b0f-afe8-3ecc0b56db33")
                        },
                        new
                        {
                            Id = new Guid("b81c2f0a-77f9-47ae-8c43-577b74d909c4"),
                            Name = "География",
                            ParentId = new Guid("c8f70d8d-f10d-4b0f-afe8-3ecc0b56db33")
                        },
                        new
                        {
                            Id = new Guid("8b1784b9-6d31-4daf-a965-82324b4905c7"),
                            Name = "Физическая культура",
                            ParentId = new Guid("c8f70d8d-f10d-4b0f-afe8-3ecc0b56db33")
                        },
                        new
                        {
                            Id = new Guid("92ac2c54-326d-471a-a854-c3aa201d8cf8"),
                            Name = "Биология",
                            ParentId = new Guid("c8f70d8d-f10d-4b0f-afe8-3ecc0b56db33")
                        },
                        new
                        {
                            Id = new Guid("481141ff-1107-4cdf-a9d6-607e546c5f40"),
                            Name = "Физика",
                            ParentId = new Guid("c8f70d8d-f10d-4b0f-afe8-3ecc0b56db33")
                        },
                        new
                        {
                            Id = new Guid("aee7c118-9575-4d51-8428-1ede4080ad00"),
                            Name = "Химия",
                            ParentId = new Guid("c8f70d8d-f10d-4b0f-afe8-3ecc0b56db33")
                        },
                        new
                        {
                            Id = new Guid("a53e2d7d-79c6-46f3-ae1c-6063ecd8a79f"),
                            Name = "Английский язык",
                            ParentId = new Guid("c8f70d8d-f10d-4b0f-afe8-3ecc0b56db33")
                        },
                        new
                        {
                            Id = new Guid("46aebcb7-b754-48ac-9ca5-689e282ed1a9"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("c8f70d8d-f10d-4b0f-afe8-3ecc0b56db33")
                        },
                        new
                        {
                            Id = new Guid("c66e6944-d13c-4e4f-8adf-e4899a37bfba"),
                            Name = "Французский язык",
                            ParentId = new Guid("c8f70d8d-f10d-4b0f-afe8-3ecc0b56db33")
                        },
                        new
                        {
                            Id = new Guid("eada3223-e4eb-439f-adcd-be559d52f03f"),
                            Name = "Испанский язык",
                            ParentId = new Guid("c8f70d8d-f10d-4b0f-afe8-3ecc0b56db33")
                        },
                        new
                        {
                            Id = new Guid("6da1fe70-1fe7-4236-9912-789b63bff6ee"),
                            Name = "Китайский язык",
                            ParentId = new Guid("c8f70d8d-f10d-4b0f-afe8-3ecc0b56db33")
                        },
                        new
                        {
                            Id = new Guid("da5f60e2-755a-411a-ae09-b37c3895abcc"),
                            Name = "Абазинский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("fba7a092-c5af-4006-ac18-f7c57e9f2b12"),
                            Name = "Адыгейский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("34cde938-537d-4005-80ac-98a028c543b6"),
                            Name = "Алтайский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("38beb114-7099-48b9-b574-b8a5c21ddbc5"),
                            Name = "Башкирский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("7df4ef67-aa0c-4339-84af-149bffbe0a72"),
                            Name = "Бурятский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("a65133ac-0027-4506-941c-64c171a70e2c"),
                            Name = "Дагестанский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("235a8b7c-6d0a-4784-8f99-5f604d6b7aa9"),
                            Name = "Ингушский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("88b7b483-8fdd-4464-9fe1-baac2e82f180"),
                            Name = "Кабардино-черкесский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("32af3f53-50f7-48b0-b41e-8c110490a136"),
                            Name = "Калмыцкий язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("a238ffa9-b4a8-4391-9616-5b920fcf355d"),
                            Name = "Карачаево-балкарский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("c55d6bf9-5cad-4869-8a6c-55d11cd2b038"),
                            Name = "Коми язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("7ce52d06-c4f8-464e-b016-99b86f4f4742"),
                            Name = "Крымскотатарский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("d1235962-df7b-4950-8af9-e6ab7b3366d6"),
                            Name = "Марийский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("7d027739-3626-4588-86f9-5999e3ad5604"),
                            Name = "Мокшанский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("f93e5416-a059-400f-a938-99923984ea65"),
                            Name = "Ногайский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("3a544249-e594-49f2-a373-fcd171a6f201"),
                            Name = "Осетинский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("8e619156-ca34-4a2b-beef-b332a6f0b832"),
                            Name = "Татарский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("bcb87992-b879-450e-ba8e-7d91027a22d0"),
                            Name = "Тувинский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("af3f3560-c3bd-4d25-8ba0-c0d2f53d30a5"),
                            Name = "Удмуртский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("45d2636b-b287-4ecb-b5dc-c630c161de3b"),
                            Name = "Хакасский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("a7bb2072-1b32-45ee-8853-08e67044fcc0"),
                            Name = "Чеченский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("a389e8ee-6cd8-439f-a5d2-274b3ee9af8c"),
                            Name = "Чувашский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("cbf29783-4f26-41c7-8daa-ea0a877b5da4"),
                            Name = "Эрзянский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        },
                        new
                        {
                            Id = new Guid("f369585a-a24f-4728-b386-5f727c981eff"),
                            Name = "Якутский язык",
                            ParentId = new Guid("6fa48385-d664-4a57-889a-4dd82a9ce6f4")
                        });
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.AboutTeacher", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.GroupLesson", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.TeacherTypeLesson", "TeacherTypeLesson")
                        .WithMany()
                        .HasForeignKey("TeacherTypeLessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeacherTypeLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.GroupLessonStudents", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.GroupLesson", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspDigitalLesson.Model.Entity.Students", "Students")
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Scheduler", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.GroupLesson", "GroupLesson")
                        .WithMany()
                        .HasForeignKey("GroupLessonId");

                    b.HasOne("AspDigitalLesson.Model.Entity.SingleLesson", "SingleLesson")
                        .WithMany()
                        .HasForeignKey("SingleLessonId");

                    b.HasOne("AspDigitalLesson.Model.Entity.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupLesson");

                    b.Navigation("SingleLesson");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.SingleLesson", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.Students", "Students")
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspDigitalLesson.Model.Entity.TeacherTypeLesson", "TeacherTypeLesson")
                        .WithMany()
                        .HasForeignKey("TeacherTypeLessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Students");

                    b.Navigation("TeacherTypeLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Students", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.SettingsStudent", "SettingsStudent")
                        .WithMany()
                        .HasForeignKey("SettingsStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SettingsStudent");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Teacher", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.SettingsTeacher", "SettingsTeacher")
                        .WithMany()
                        .HasForeignKey("SettingsTeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SettingsTeacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TeacherTypeLesson", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspDigitalLesson.Model.Entity.TypeLessons", "TypeLessons")
                        .WithMany()
                        .HasForeignKey("TypeLessonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");

                    b.Navigation("TypeLessons");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TypeLessons", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.TypeLessons", "Parent")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TypeLessons", b =>
                {
                    b.Navigation("SubCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
