// <auto-generated />
using System;
using ApiDigitalLesson.Migration.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApiDigitalLesson.Migration.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230817161733_AddSettings")]
    partial class AddSettings
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.AboutTeacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("AboutTeacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.GroupLesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFinish")
                        .HasColumnType("boolean");

                    b.Property<int>("MaxQuantityStudents")
                        .HasColumnType("integer");

                    b.Property<Guid>("TeacherTypeLessonId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TypeLessonId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TeacherTypeLessonId");

                    b.ToTable("GroupLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.GroupLessonStudents", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("StudentsId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudentsId");

                    b.ToTable("GroupLessonStudents");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Scheduler", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("GroupLessonId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsWeekend")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("SingleLessonId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GroupLessonId");

                    b.HasIndex("SingleLessonId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Schedulers");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.SettingsStudent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAcceptForLessonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAcceptForLessonTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAllowCreateLesson")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLessonComingSoonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLessonComingSoonTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotificationEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotificationTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequestForLessonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequestForLessonTelegram")
                        .HasColumnType("boolean");

                    b.Property<int>("TimeBeforeLesson")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SettingsStudent");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.SettingsTeacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAcceptForLessonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAcceptForLessonTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAllowCreateLesson")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLessonComingSoonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLessonComingSoonTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotificationEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotificationTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequestForLessonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequestForLessonTelegram")
                        .HasColumnType("boolean");

                    b.Property<int>("TimeBeforeLesson")
                        .HasColumnType("integer");

                    b.Property<int>("TimeCancelLesson")
                        .HasColumnType("integer");

                    b.Property<int>("TimeCreateLesson")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SettingsTeacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.SingleLesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFinish")
                        .HasColumnType("boolean");

                    b.Property<Guid>("StudentsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TeacherTypeLessonId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TypeLessonId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("StudentsId");

                    b.HasIndex("TeacherTypeLessonId");

                    b.ToTable("SingleLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Students", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("DateBirthday")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<Guid>("SettingsStudentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("TelegramId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SettingsStudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("DateBirthday")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("bytea");

                    b.Property<Guid>("SettingsTeacherId")
                        .HasColumnType("uuid");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("TelegramId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SettingsTeacherId");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TeacherTypeLesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsGroup")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOffline")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSingle")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TypeLessonsId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.HasIndex("TypeLessonsId");

                    b.ToTable("TeacherTypeLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TypeLessons", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("Category")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("TypeLessons", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f9527b95-fdf5-4319-9397-8d2aa964e39c"),
                            Category = 0,
                            Name = "ЕГЭ"
                        },
                        new
                        {
                            Id = new Guid("0a282dac-7f68-4b64-b178-0b311d5c89a4"),
                            Category = 1,
                            Name = "ОГЭ"
                        },
                        new
                        {
                            Id = new Guid("055ad00b-014d-446f-831f-9132bf6fabc6"),
                            Category = 2,
                            Name = "Технические науки"
                        },
                        new
                        {
                            Id = new Guid("89513895-9af6-42f1-baed-347fad64a0d1"),
                            Category = 3,
                            Name = "Естественные науки"
                        },
                        new
                        {
                            Id = new Guid("6578b2d1-579f-4c47-97d3-e0a32e945360"),
                            Category = 4,
                            Name = "Гуманитарные науки"
                        },
                        new
                        {
                            Id = new Guid("429a8148-1daa-4e9f-9a56-f690c8a36dec"),
                            Category = 5,
                            Name = "Программирование"
                        },
                        new
                        {
                            Id = new Guid("ea0dc2c3-3b1a-45a0-b899-8ea58959596a"),
                            Category = 6,
                            Name = "Школьная программа"
                        },
                        new
                        {
                            Id = new Guid("4953f4ea-91f1-4168-9f53-e83bf909f572"),
                            Category = 7,
                            Name = "Музыка"
                        },
                        new
                        {
                            Id = new Guid("0535648d-481f-40fe-a381-256af47acb97"),
                            Category = 8,
                            Name = "Искусство"
                        },
                        new
                        {
                            Id = new Guid("142cbf52-4dba-45f8-8fab-65225db5f4d0"),
                            Name = "Математика (базовый уровень)",
                            ParentId = new Guid("f9527b95-fdf5-4319-9397-8d2aa964e39c")
                        },
                        new
                        {
                            Id = new Guid("a0c4b74b-6557-436c-9f04-6f21284fdbcb"),
                            Name = "Математика (профильный уровень)",
                            ParentId = new Guid("f9527b95-fdf5-4319-9397-8d2aa964e39c")
                        },
                        new
                        {
                            Id = new Guid("97e97f1c-2e66-42d3-b1cf-bf6700b33cf0"),
                            Name = "Русский язык",
                            ParentId = new Guid("f9527b95-fdf5-4319-9397-8d2aa964e39c")
                        },
                        new
                        {
                            Id = new Guid("e936fb76-e12a-4ddd-89e0-1186a6584ed2"),
                            Name = "Литература",
                            ParentId = new Guid("f9527b95-fdf5-4319-9397-8d2aa964e39c")
                        },
                        new
                        {
                            Id = new Guid("fbf31ae2-9660-4de7-be60-06bb2385feea"),
                            Name = "Физика",
                            ParentId = new Guid("f9527b95-fdf5-4319-9397-8d2aa964e39c")
                        },
                        new
                        {
                            Id = new Guid("efeef0fe-3a1f-47e4-9e1c-bc3f86163a98"),
                            Name = "Химия",
                            ParentId = new Guid("f9527b95-fdf5-4319-9397-8d2aa964e39c")
                        },
                        new
                        {
                            Id = new Guid("ec71c836-faff-4e67-b515-95685d75980b"),
                            Name = "История",
                            ParentId = new Guid("f9527b95-fdf5-4319-9397-8d2aa964e39c")
                        },
                        new
                        {
                            Id = new Guid("d2b8db87-cb3f-4195-a9bb-99cf1d421d77"),
                            Name = "Обществознание",
                            ParentId = new Guid("f9527b95-fdf5-4319-9397-8d2aa964e39c")
                        },
                        new
                        {
                            Id = new Guid("5e2b2f23-071e-4423-9bf8-3a68b1f959f9"),
                            Name = "Информатика",
                            ParentId = new Guid("f9527b95-fdf5-4319-9397-8d2aa964e39c")
                        },
                        new
                        {
                            Id = new Guid("44df0387-4298-4135-aeb9-9f4c8b0138c7"),
                            Name = "Биология",
                            ParentId = new Guid("f9527b95-fdf5-4319-9397-8d2aa964e39c")
                        },
                        new
                        {
                            Id = new Guid("415faa0d-f144-4111-a20d-3f1a48f66ae4"),
                            Name = "География",
                            ParentId = new Guid("f9527b95-fdf5-4319-9397-8d2aa964e39c")
                        },
                        new
                        {
                            Id = new Guid("b34bfec0-4d10-4d07-9cca-c90513dafd33"),
                            Name = "Английский язык",
                            ParentId = new Guid("f9527b95-fdf5-4319-9397-8d2aa964e39c")
                        },
                        new
                        {
                            Id = new Guid("9a349dc6-cf9a-415c-9187-7e8056f9c4ee"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("f9527b95-fdf5-4319-9397-8d2aa964e39c")
                        },
                        new
                        {
                            Id = new Guid("da8b5860-609d-4bab-b41e-6472425b58c0"),
                            Name = "Французский язык",
                            ParentId = new Guid("f9527b95-fdf5-4319-9397-8d2aa964e39c")
                        },
                        new
                        {
                            Id = new Guid("80b25906-463d-4ff5-9315-28d0103320c3"),
                            Name = "Китайский язык",
                            ParentId = new Guid("f9527b95-fdf5-4319-9397-8d2aa964e39c")
                        },
                        new
                        {
                            Id = new Guid("e0bc384c-3f28-4f74-8019-3ba28d54b191"),
                            Name = "Испанский язык",
                            ParentId = new Guid("f9527b95-fdf5-4319-9397-8d2aa964e39c")
                        },
                        new
                        {
                            Id = new Guid("4c52f4a3-e327-418b-b639-3dd7c0c57d6d"),
                            Name = "География",
                            ParentId = new Guid("f9527b95-fdf5-4319-9397-8d2aa964e39c")
                        },
                        new
                        {
                            Id = new Guid("38dcd820-498a-473c-a96d-f7b59f7847b9"),
                            Name = "Математика",
                            ParentId = new Guid("0a282dac-7f68-4b64-b178-0b311d5c89a4")
                        },
                        new
                        {
                            Id = new Guid("7f821cce-12b4-4ecc-8f2c-ed679a96aa83"),
                            Name = "Русский язык",
                            ParentId = new Guid("0a282dac-7f68-4b64-b178-0b311d5c89a4")
                        },
                        new
                        {
                            Id = new Guid("e7b6612d-5452-4197-b2fc-e310c8eb1d51"),
                            Name = "Литература",
                            ParentId = new Guid("0a282dac-7f68-4b64-b178-0b311d5c89a4")
                        },
                        new
                        {
                            Id = new Guid("f73712ba-235f-4715-b12b-f904ad54b3be"),
                            Name = "Физика",
                            ParentId = new Guid("0a282dac-7f68-4b64-b178-0b311d5c89a4")
                        },
                        new
                        {
                            Id = new Guid("ae96a6b2-0fca-4a04-b7a0-b2a17b43544b"),
                            Name = "Химия",
                            ParentId = new Guid("0a282dac-7f68-4b64-b178-0b311d5c89a4")
                        },
                        new
                        {
                            Id = new Guid("cb1d5053-22cb-4d11-b10e-8a2a9a2ccaae"),
                            Name = "История",
                            ParentId = new Guid("0a282dac-7f68-4b64-b178-0b311d5c89a4")
                        },
                        new
                        {
                            Id = new Guid("4d1d9eab-47fa-4c9b-ba32-fa230fc82342"),
                            Name = "Обществознание",
                            ParentId = new Guid("0a282dac-7f68-4b64-b178-0b311d5c89a4")
                        },
                        new
                        {
                            Id = new Guid("1df8b4f9-fb75-408b-96d0-cd6eaa78b0d7"),
                            Name = "Информатика",
                            ParentId = new Guid("0a282dac-7f68-4b64-b178-0b311d5c89a4")
                        },
                        new
                        {
                            Id = new Guid("5996ad85-e770-4f2e-a50d-cacfe4d2ae77"),
                            Name = "Биология",
                            ParentId = new Guid("0a282dac-7f68-4b64-b178-0b311d5c89a4")
                        },
                        new
                        {
                            Id = new Guid("68ac1ad8-002d-4186-bfc8-ebd5acf684e7"),
                            Name = "География",
                            ParentId = new Guid("0a282dac-7f68-4b64-b178-0b311d5c89a4")
                        },
                        new
                        {
                            Id = new Guid("827231ba-2a43-4471-9a49-272c442c3a46"),
                            Name = "Английский язык",
                            ParentId = new Guid("0a282dac-7f68-4b64-b178-0b311d5c89a4")
                        },
                        new
                        {
                            Id = new Guid("ec612445-d7c1-4e62-a56d-8ead4427b393"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("0a282dac-7f68-4b64-b178-0b311d5c89a4")
                        },
                        new
                        {
                            Id = new Guid("fbd51f73-ded0-4e2a-b38a-1d34913d91df"),
                            Name = "Французский язык",
                            ParentId = new Guid("0a282dac-7f68-4b64-b178-0b311d5c89a4")
                        },
                        new
                        {
                            Id = new Guid("9f902c9c-2a8b-4d11-a71d-c096c0aee3dd"),
                            Name = "Китайский язык",
                            ParentId = new Guid("0a282dac-7f68-4b64-b178-0b311d5c89a4")
                        },
                        new
                        {
                            Id = new Guid("6b82965d-6973-4e3a-a379-8e76ab0b7a5d"),
                            Name = "Испанский язык",
                            ParentId = new Guid("0a282dac-7f68-4b64-b178-0b311d5c89a4")
                        },
                        new
                        {
                            Id = new Guid("767d7d86-d85f-476d-a503-591dadace88e"),
                            Name = "География",
                            ParentId = new Guid("0a282dac-7f68-4b64-b178-0b311d5c89a4")
                        },
                        new
                        {
                            Id = new Guid("75c2c708-c285-4122-a427-0dac7be4e3bf"),
                            Name = "1-4 класс",
                            ParentId = new Guid("ea0dc2c3-3b1a-45a0-b899-8ea58959596a")
                        },
                        new
                        {
                            Id = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978"),
                            Name = "5-9 класс",
                            ParentId = new Guid("ea0dc2c3-3b1a-45a0-b899-8ea58959596a")
                        },
                        new
                        {
                            Id = new Guid("41e925dd-a86c-4a5a-8a90-976aca725251"),
                            Name = "9-11 класс",
                            ParentId = new Guid("ea0dc2c3-3b1a-45a0-b899-8ea58959596a")
                        },
                        new
                        {
                            Id = new Guid("14050398-947e-45ef-b869-90e7f39b354c"),
                            Name = "Народные языки",
                            ParentId = new Guid("ea0dc2c3-3b1a-45a0-b899-8ea58959596a")
                        },
                        new
                        {
                            Id = new Guid("f6efba9d-77ef-4d81-817c-f4cad911fad2"),
                            Name = "Русский язык",
                            ParentId = new Guid("75c2c708-c285-4122-a427-0dac7be4e3bf")
                        },
                        new
                        {
                            Id = new Guid("4c03b5f3-5d6f-4e7e-a155-b6f41801fb50"),
                            Name = "Литературное чтение",
                            ParentId = new Guid("75c2c708-c285-4122-a427-0dac7be4e3bf")
                        },
                        new
                        {
                            Id = new Guid("862ae15c-e91f-4b1a-ac29-7589f804674e"),
                            Name = "Математика",
                            ParentId = new Guid("75c2c708-c285-4122-a427-0dac7be4e3bf")
                        },
                        new
                        {
                            Id = new Guid("288b07e1-9286-4363-85db-4fcd924302ae"),
                            Name = "Обществознание",
                            ParentId = new Guid("75c2c708-c285-4122-a427-0dac7be4e3bf")
                        },
                        new
                        {
                            Id = new Guid("42d1121f-5621-4d22-adf2-fe363e675870"),
                            Name = "Окружающий мир",
                            ParentId = new Guid("75c2c708-c285-4122-a427-0dac7be4e3bf")
                        },
                        new
                        {
                            Id = new Guid("56563072-ebec-4d76-81c6-10aa20534119"),
                            Name = "ИЗО",
                            ParentId = new Guid("75c2c708-c285-4122-a427-0dac7be4e3bf")
                        },
                        new
                        {
                            Id = new Guid("2ce7a3ff-c7e4-43f4-81d9-c3dd7902e262"),
                            Name = "Музыка",
                            ParentId = new Guid("75c2c708-c285-4122-a427-0dac7be4e3bf")
                        },
                        new
                        {
                            Id = new Guid("314fb244-951b-4a33-9862-c05a722bc220"),
                            Name = "Технология",
                            ParentId = new Guid("75c2c708-c285-4122-a427-0dac7be4e3bf")
                        },
                        new
                        {
                            Id = new Guid("7baef7c1-054c-435a-9447-9171c8d9adf9"),
                            Name = "Физическая культура",
                            ParentId = new Guid("75c2c708-c285-4122-a427-0dac7be4e3bf")
                        },
                        new
                        {
                            Id = new Guid("2b7d7819-e50a-4d15-ae65-60a76d2eb2a2"),
                            Name = "Английский язык",
                            ParentId = new Guid("75c2c708-c285-4122-a427-0dac7be4e3bf")
                        },
                        new
                        {
                            Id = new Guid("ca4b47ab-706e-433a-aa02-4651352a2759"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("75c2c708-c285-4122-a427-0dac7be4e3bf")
                        },
                        new
                        {
                            Id = new Guid("dfa9e0d3-3d28-433e-898d-5f35e571ac0d"),
                            Name = "Французский язык",
                            ParentId = new Guid("75c2c708-c285-4122-a427-0dac7be4e3bf")
                        },
                        new
                        {
                            Id = new Guid("8e1ad3a9-25ae-4649-b4ca-ab5643d306f4"),
                            Name = "Испанский язык",
                            ParentId = new Guid("75c2c708-c285-4122-a427-0dac7be4e3bf")
                        },
                        new
                        {
                            Id = new Guid("5d66f0c1-2754-42c8-8b52-3246c96518d0"),
                            Name = "Китайский язык",
                            ParentId = new Guid("75c2c708-c285-4122-a427-0dac7be4e3bf")
                        },
                        new
                        {
                            Id = new Guid("7e8512ea-95d5-4abb-ad4e-8ac23bfd2bd8"),
                            Name = "Русский язык",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("76f19ee7-4aef-4a14-950d-83df7ace10e8"),
                            Name = "Литература",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("53850ab0-5adf-475c-bd3c-b510cfe93642"),
                            Name = "История",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("1df79adb-356c-4188-9561-f3c48e793f45"),
                            Name = "Обществознание",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("6a65c0cc-202c-421b-85f3-4557a8638593"),
                            Name = "География",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("fb441322-364a-4e6a-be55-754b1c2f5f8b"),
                            Name = "Алгебра",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("24fa9a3a-9a81-43b4-b86b-9319924c328d"),
                            Name = "Геометрия",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("44022d48-263c-4ecd-98eb-02068761df16"),
                            Name = "Информатика",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("409c2801-79e4-4f01-aa8b-a574de3fc98c"),
                            Name = "Основы духовно-нравственной культуры народов России",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("29de8143-1496-4959-b121-89e2e78659f1"),
                            Name = "Основы религиозных культур и светской этики",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("dceb8cbd-d618-4f34-9ba7-091f464249d6"),
                            Name = "Физика",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("3a6e4d78-b82f-4057-b50d-dcdc35aaa5ac"),
                            Name = "Биология",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("79cb6116-a9ae-43ac-898f-c737a4fdfbfa"),
                            Name = "Химия",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("b76a53a9-2e29-4b63-b4c5-ca02c9267da2"),
                            Name = "Изобразительное искусство",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("f87b8b38-b6bd-4675-b3c4-529d7e254ca6"),
                            Name = "Музыка",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("677e9784-1f3e-47dc-abc7-e93eeb546e1d"),
                            Name = "Технология",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("befebe1c-7383-4659-9e79-4b11df9f8e99"),
                            Name = "Физическая культура",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("befceccd-d521-497a-a3c9-3cb489982472"),
                            Name = "Основы безопасности жизнедеятельности",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("3ec952c0-bc6f-42a2-912d-4b7c3ee91e2a"),
                            Name = "Английский язык",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("d49d7557-8965-4bda-a636-8658c5e32390"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("59c2eb7c-7626-4102-9844-043c5669aafd"),
                            Name = "Французский язык",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("0d501443-fc1c-4740-8381-6dcd951817d1"),
                            Name = "Испанский язык",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("4a3e98ab-6fdf-4db0-831f-872b68a7836b"),
                            Name = "Китайский язык",
                            ParentId = new Guid("a95fa4bc-5438-463f-89b4-bccc5970f978")
                        },
                        new
                        {
                            Id = new Guid("e5f001cd-f68a-4341-b000-f2c4079542d3"),
                            Name = "Алгебра",
                            ParentId = new Guid("41e925dd-a86c-4a5a-8a90-976aca725251")
                        },
                        new
                        {
                            Id = new Guid("f0a8882b-d601-466b-b01c-218d5795e998"),
                            Name = "Геометрия",
                            ParentId = new Guid("41e925dd-a86c-4a5a-8a90-976aca725251")
                        },
                        new
                        {
                            Id = new Guid("74de6b9a-51a5-410a-ba6f-3ce713b5a367"),
                            Name = "Русский язык",
                            ParentId = new Guid("41e925dd-a86c-4a5a-8a90-976aca725251")
                        },
                        new
                        {
                            Id = new Guid("6cad4673-8c94-461e-8a7b-f8e9303fe7df"),
                            Name = "Литература",
                            ParentId = new Guid("41e925dd-a86c-4a5a-8a90-976aca725251")
                        },
                        new
                        {
                            Id = new Guid("30fbbe08-dc29-4e7e-9e07-a7e5680a9a5f"),
                            Name = "Всеобщая история",
                            ParentId = new Guid("41e925dd-a86c-4a5a-8a90-976aca725251")
                        },
                        new
                        {
                            Id = new Guid("317240f9-a92e-49e2-b151-d048678939ec"),
                            Name = "История России",
                            ParentId = new Guid("41e925dd-a86c-4a5a-8a90-976aca725251")
                        },
                        new
                        {
                            Id = new Guid("c08eeaf2-93e0-41df-b74b-cd4aa9e49f87"),
                            Name = "Обществознание",
                            ParentId = new Guid("41e925dd-a86c-4a5a-8a90-976aca725251")
                        },
                        new
                        {
                            Id = new Guid("0930de0c-aa1b-4ddd-8fc6-3141d9acf862"),
                            Name = "Черчение",
                            ParentId = new Guid("41e925dd-a86c-4a5a-8a90-976aca725251")
                        },
                        new
                        {
                            Id = new Guid("e1c552d1-bf81-463e-b762-cc8afee9a3b7"),
                            Name = "Основы безопасности и жизнедеятельности",
                            ParentId = new Guid("41e925dd-a86c-4a5a-8a90-976aca725251")
                        },
                        new
                        {
                            Id = new Guid("f4d40764-d8d4-4c46-a8de-f8bf30a97ee1"),
                            Name = "Информатика",
                            ParentId = new Guid("41e925dd-a86c-4a5a-8a90-976aca725251")
                        },
                        new
                        {
                            Id = new Guid("29afff99-286c-4f22-b8a2-f0c36b2c3213"),
                            Name = "География",
                            ParentId = new Guid("41e925dd-a86c-4a5a-8a90-976aca725251")
                        },
                        new
                        {
                            Id = new Guid("a19e9168-e103-4542-bd4f-5a956b5c5231"),
                            Name = "Физическая культура",
                            ParentId = new Guid("41e925dd-a86c-4a5a-8a90-976aca725251")
                        },
                        new
                        {
                            Id = new Guid("b5758162-2c91-44b4-b85c-0dcc03702f9e"),
                            Name = "Биология",
                            ParentId = new Guid("41e925dd-a86c-4a5a-8a90-976aca725251")
                        },
                        new
                        {
                            Id = new Guid("e56be609-d5c2-4581-add4-93015fb733b7"),
                            Name = "Физика",
                            ParentId = new Guid("41e925dd-a86c-4a5a-8a90-976aca725251")
                        },
                        new
                        {
                            Id = new Guid("35873033-c65a-4307-bfd3-3aad386a8813"),
                            Name = "Химия",
                            ParentId = new Guid("41e925dd-a86c-4a5a-8a90-976aca725251")
                        },
                        new
                        {
                            Id = new Guid("d5261858-74aa-490c-b724-b8d623aea4e7"),
                            Name = "Английский язык",
                            ParentId = new Guid("41e925dd-a86c-4a5a-8a90-976aca725251")
                        },
                        new
                        {
                            Id = new Guid("6fdb06b3-2b31-4a47-b0bf-11fb04737dad"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("41e925dd-a86c-4a5a-8a90-976aca725251")
                        },
                        new
                        {
                            Id = new Guid("4f6dbab8-a7c6-46da-b3eb-cb83a64506b7"),
                            Name = "Французский язык",
                            ParentId = new Guid("41e925dd-a86c-4a5a-8a90-976aca725251")
                        },
                        new
                        {
                            Id = new Guid("8711b9e3-19f0-4129-8c9e-d209066efd83"),
                            Name = "Испанский язык",
                            ParentId = new Guid("41e925dd-a86c-4a5a-8a90-976aca725251")
                        },
                        new
                        {
                            Id = new Guid("d059a026-2dbf-41e4-a472-f1521125f2ed"),
                            Name = "Китайский язык",
                            ParentId = new Guid("41e925dd-a86c-4a5a-8a90-976aca725251")
                        },
                        new
                        {
                            Id = new Guid("4fb68591-cd10-4d7a-b0cd-9ff6b453f564"),
                            Name = "Абазинский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("ed5f00ab-1612-485b-9fd9-7d9538c81a69"),
                            Name = "Адыгейский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("38e7e148-b27d-4746-b2ef-e62bad5b541b"),
                            Name = "Алтайский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("ca82733f-3b73-49f0-8d43-6e5ce70b61d7"),
                            Name = "Башкирский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("f92002f0-c83a-4cc7-a052-c8b001f848bd"),
                            Name = "Бурятский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("71899516-dca4-4653-a359-44dd2dc1d771"),
                            Name = "Дагестанский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("25817e1a-0e6f-44bb-a11c-7e1e2a12343e"),
                            Name = "Ингушский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("10cfe1f7-1a1e-4ae5-9c50-408bbdfecbbb"),
                            Name = "Кабардино-черкесский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("f9650001-705f-4c07-be6b-b6ac970141e0"),
                            Name = "Калмыцкий язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("a30c0908-727e-47cb-937e-6d23c728c6a2"),
                            Name = "Карачаево-балкарский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("259039d5-8c60-4956-9f7b-fc45ed7bb359"),
                            Name = "Коми язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("4b7249ea-71ed-4e15-aabc-48c63a731644"),
                            Name = "Крымскотатарский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("b288ffd4-1c6a-4731-9954-99a1e655983f"),
                            Name = "Марийский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("282e1f6f-8a45-4b93-89d5-6d6ac33de3f7"),
                            Name = "Мокшанский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("4f7c6d4e-2e9f-45ab-968f-79778c340f75"),
                            Name = "Ногайский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("114c4e97-fac3-49af-8944-591a27b7800d"),
                            Name = "Осетинский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("d8f39c26-420b-4c98-949d-0f5abf2d7026"),
                            Name = "Татарский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("a331929e-ff62-4f01-85a9-32fa52792ba7"),
                            Name = "Тувинский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("7ae2bdaf-4e70-4c54-9240-53c46e183f01"),
                            Name = "Удмуртский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("364728c7-7241-438f-832a-a8a9ccdde1b1"),
                            Name = "Хакасский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("8709c8e0-1ec1-44cf-917f-a95060477501"),
                            Name = "Чеченский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("69935247-5ce7-48de-adc3-9111c89cf5fb"),
                            Name = "Чувашский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("3b0d52b4-4921-46d2-aa65-fb1cd36b8f92"),
                            Name = "Эрзянский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        },
                        new
                        {
                            Id = new Guid("1ce190c0-33df-4416-90ee-64e0b84f5021"),
                            Name = "Якутский язык",
                            ParentId = new Guid("14050398-947e-45ef-b869-90e7f39b354c")
                        });
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.AboutTeacher", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.GroupLesson", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.TeacherTypeLesson", "TeacherTypeLesson")
                        .WithMany()
                        .HasForeignKey("TeacherTypeLessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeacherTypeLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.GroupLessonStudents", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.GroupLesson", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspDigitalLesson.Model.Entity.Students", "Students")
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Scheduler", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.GroupLesson", "GroupLesson")
                        .WithMany()
                        .HasForeignKey("GroupLessonId");

                    b.HasOne("AspDigitalLesson.Model.Entity.SingleLesson", "SingleLesson")
                        .WithMany()
                        .HasForeignKey("SingleLessonId");

                    b.HasOne("AspDigitalLesson.Model.Entity.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupLesson");

                    b.Navigation("SingleLesson");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.SingleLesson", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.Students", "Students")
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspDigitalLesson.Model.Entity.TeacherTypeLesson", "TeacherTypeLesson")
                        .WithMany()
                        .HasForeignKey("TeacherTypeLessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Students");

                    b.Navigation("TeacherTypeLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Students", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.SettingsStudent", "SettingsStudent")
                        .WithMany()
                        .HasForeignKey("SettingsStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SettingsStudent");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Teacher", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.SettingsTeacher", "SettingsTeacher")
                        .WithMany()
                        .HasForeignKey("SettingsTeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SettingsTeacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TeacherTypeLesson", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspDigitalLesson.Model.Entity.TypeLessons", "TypeLessons")
                        .WithMany()
                        .HasForeignKey("TypeLessonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");

                    b.Navigation("TypeLessons");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TypeLessons", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.TypeLessons", "Parent")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TypeLessons", b =>
                {
                    b.Navigation("SubCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
