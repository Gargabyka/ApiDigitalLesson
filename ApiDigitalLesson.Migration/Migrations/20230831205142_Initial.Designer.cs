// <auto-generated />
using System;
using ApiDigitalLesson.Migration.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApiDigitalLesson.Migration.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230831205142_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.AboutTeacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("AboutTeacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.GroupLesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CancelMessage")
                        .HasColumnType("text");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfirmedForStudent")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfirmedForTeacher")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFinish")
                        .HasColumnType("boolean");

                    b.Property<int>("MaxQuantityStudents")
                        .HasColumnType("integer");

                    b.Property<Guid>("TeacherTypeLessonId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TeacherTypeLessonId");

                    b.ToTable("GroupLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.GroupLessonStudents", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("StudentsId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudentsId");

                    b.ToTable("GroupLessonStudents");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Moderator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DateBirthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Moderators");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Scheduler", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("GroupLessonId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsWeekend")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("SingleLessonId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GroupLessonId");

                    b.HasIndex("SingleLessonId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Schedulers");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.SettingsStudent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAcceptForLessonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAcceptForLessonTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAllowCreateLesson")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCancelLessonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCancelLessonTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLessonComingSoonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLessonComingSoonTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotificationEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotificationTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequestForLessonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequestForLessonTelegram")
                        .HasColumnType("boolean");

                    b.Property<int>("TimeBeforeLesson")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SettingsStudent");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.SettingsTeacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAcceptForLessonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAcceptForLessonTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAllowCreateLesson")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCancelLessonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCancelLessonTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLessonComingSoonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLessonComingSoonTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotificationEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotificationTelegram")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequestForLessonEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequestForLessonTelegram")
                        .HasColumnType("boolean");

                    b.Property<int>("TimeBeforeLesson")
                        .HasColumnType("integer");

                    b.Property<int>("TimeCancelLesson")
                        .HasColumnType("integer");

                    b.Property<int>("TimeCreateLesson")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SettingsTeacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.SingleLesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CancelMessage")
                        .HasColumnType("text");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfirmedForStudent")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfirmedForTeacher")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFinish")
                        .HasColumnType("boolean");

                    b.Property<Guid>("StudentsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TeacherTypeLessonId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("StudentsId");

                    b.HasIndex("TeacherTypeLessonId");

                    b.ToTable("SingleLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Students", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DateBirthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<Guid>("SettingsStudentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("TelegramId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SettingsStudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DateBirthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("bytea");

                    b.Property<Guid>("SettingsTeacherId")
                        .HasColumnType("uuid");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("TelegramId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SettingsTeacherId");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TeacherTypeLesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsGroup")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOffline")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSingle")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TypeLessonsId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId")
                        .IsUnique();

                    b.HasIndex("TypeLessonsId");

                    b.ToTable("TeacherTypeLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TypeLessons", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("Category")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("TypeLessons", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("28550ab6-d634-4713-8332-ec614736750c"),
                            Category = 0,
                            Name = "ЕГЭ"
                        },
                        new
                        {
                            Id = new Guid("a5e9dbe9-7159-41be-ac7e-a061d6081c66"),
                            Category = 1,
                            Name = "ОГЭ"
                        },
                        new
                        {
                            Id = new Guid("6f9369db-2e71-46cc-96b0-2005578c06de"),
                            Category = 2,
                            Name = "Технические науки"
                        },
                        new
                        {
                            Id = new Guid("8eb6f981-9b28-4106-ae74-e740c290d735"),
                            Category = 3,
                            Name = "Естественные науки"
                        },
                        new
                        {
                            Id = new Guid("7f3e6e40-6602-4fd2-8295-80bccf652e2a"),
                            Category = 4,
                            Name = "Гуманитарные науки"
                        },
                        new
                        {
                            Id = new Guid("b0da7df0-615b-47cd-a452-e06f8b421870"),
                            Category = 5,
                            Name = "Программирование"
                        },
                        new
                        {
                            Id = new Guid("32c656d2-645b-4a81-ac8c-0921d9f54f47"),
                            Category = 6,
                            Name = "Школьная программа"
                        },
                        new
                        {
                            Id = new Guid("ca79d740-62e6-4027-8f08-c5fecc21af23"),
                            Category = 7,
                            Name = "Музыка"
                        },
                        new
                        {
                            Id = new Guid("17017be0-5efb-46e7-824d-ebb0beeb55f6"),
                            Category = 8,
                            Name = "Искусство"
                        },
                        new
                        {
                            Id = new Guid("33f906a8-e2d1-4dba-94da-ab9905262282"),
                            Name = "Математика (базовый уровень)",
                            ParentId = new Guid("28550ab6-d634-4713-8332-ec614736750c")
                        },
                        new
                        {
                            Id = new Guid("977c39a4-5960-4f6a-8c29-bccc5487bf7c"),
                            Name = "Математика (профильный уровень)",
                            ParentId = new Guid("28550ab6-d634-4713-8332-ec614736750c")
                        },
                        new
                        {
                            Id = new Guid("fd49d3c5-5a69-4268-b1d5-f93c634abb16"),
                            Name = "Русский язык",
                            ParentId = new Guid("28550ab6-d634-4713-8332-ec614736750c")
                        },
                        new
                        {
                            Id = new Guid("14dfc8b4-4c3d-439b-b623-272e3eaddf35"),
                            Name = "Литература",
                            ParentId = new Guid("28550ab6-d634-4713-8332-ec614736750c")
                        },
                        new
                        {
                            Id = new Guid("d8ba5948-ebdb-472b-acd5-17c8c232b332"),
                            Name = "Физика",
                            ParentId = new Guid("28550ab6-d634-4713-8332-ec614736750c")
                        },
                        new
                        {
                            Id = new Guid("1a8fb7c9-6170-4f79-9930-9c70624c0901"),
                            Name = "Химия",
                            ParentId = new Guid("28550ab6-d634-4713-8332-ec614736750c")
                        },
                        new
                        {
                            Id = new Guid("3542baad-dab4-45c9-a8d9-8444f318acf0"),
                            Name = "История",
                            ParentId = new Guid("28550ab6-d634-4713-8332-ec614736750c")
                        },
                        new
                        {
                            Id = new Guid("336ba2a2-c56d-4bb8-acf1-c428d843ed7e"),
                            Name = "Обществознание",
                            ParentId = new Guid("28550ab6-d634-4713-8332-ec614736750c")
                        },
                        new
                        {
                            Id = new Guid("f48f105e-4998-4309-8aa2-f27e9c88d8c9"),
                            Name = "Информатика",
                            ParentId = new Guid("28550ab6-d634-4713-8332-ec614736750c")
                        },
                        new
                        {
                            Id = new Guid("de4a4ce1-0711-4ea9-9894-c5436d815f7b"),
                            Name = "Биология",
                            ParentId = new Guid("28550ab6-d634-4713-8332-ec614736750c")
                        },
                        new
                        {
                            Id = new Guid("ea0e583b-8f30-4721-8f24-4ccd4b72aa73"),
                            Name = "География",
                            ParentId = new Guid("28550ab6-d634-4713-8332-ec614736750c")
                        },
                        new
                        {
                            Id = new Guid("8c3750f7-7018-46ad-88ec-b9620b2102eb"),
                            Name = "Английский язык",
                            ParentId = new Guid("28550ab6-d634-4713-8332-ec614736750c")
                        },
                        new
                        {
                            Id = new Guid("fbe62f85-75df-4b01-8568-219a72c1df34"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("28550ab6-d634-4713-8332-ec614736750c")
                        },
                        new
                        {
                            Id = new Guid("50d180cd-ffa0-488a-b7ae-fddde50fdde7"),
                            Name = "Французский язык",
                            ParentId = new Guid("28550ab6-d634-4713-8332-ec614736750c")
                        },
                        new
                        {
                            Id = new Guid("0526434a-dd72-4ea0-a8e3-a0c3767b0974"),
                            Name = "Китайский язык",
                            ParentId = new Guid("28550ab6-d634-4713-8332-ec614736750c")
                        },
                        new
                        {
                            Id = new Guid("d00ccd2d-007a-49d3-8af9-766c98ff48e1"),
                            Name = "Испанский язык",
                            ParentId = new Guid("28550ab6-d634-4713-8332-ec614736750c")
                        },
                        new
                        {
                            Id = new Guid("4711ea4f-3a2b-47fe-ad2c-8654dfec817d"),
                            Name = "География",
                            ParentId = new Guid("28550ab6-d634-4713-8332-ec614736750c")
                        },
                        new
                        {
                            Id = new Guid("5877ed5b-f3d9-411b-a3e7-df62b5eeae55"),
                            Name = "Математика",
                            ParentId = new Guid("a5e9dbe9-7159-41be-ac7e-a061d6081c66")
                        },
                        new
                        {
                            Id = new Guid("82aa4329-4e9f-4f88-851c-03daa20eb3c4"),
                            Name = "Русский язык",
                            ParentId = new Guid("a5e9dbe9-7159-41be-ac7e-a061d6081c66")
                        },
                        new
                        {
                            Id = new Guid("f76b10c1-4d1c-4080-9abb-0b439e815f3c"),
                            Name = "Литература",
                            ParentId = new Guid("a5e9dbe9-7159-41be-ac7e-a061d6081c66")
                        },
                        new
                        {
                            Id = new Guid("2f52d145-6893-424d-b18e-53e2ec668ca7"),
                            Name = "Физика",
                            ParentId = new Guid("a5e9dbe9-7159-41be-ac7e-a061d6081c66")
                        },
                        new
                        {
                            Id = new Guid("d1b56a1a-1128-4310-b6a7-083d73007942"),
                            Name = "Химия",
                            ParentId = new Guid("a5e9dbe9-7159-41be-ac7e-a061d6081c66")
                        },
                        new
                        {
                            Id = new Guid("39fd1fcb-474e-47b6-8036-51bd8f31ee43"),
                            Name = "История",
                            ParentId = new Guid("a5e9dbe9-7159-41be-ac7e-a061d6081c66")
                        },
                        new
                        {
                            Id = new Guid("d07d91a0-d3f9-4479-b9c2-af1480ce143f"),
                            Name = "Обществознание",
                            ParentId = new Guid("a5e9dbe9-7159-41be-ac7e-a061d6081c66")
                        },
                        new
                        {
                            Id = new Guid("def05219-8541-4d40-bd3d-e68e065838c2"),
                            Name = "Информатика",
                            ParentId = new Guid("a5e9dbe9-7159-41be-ac7e-a061d6081c66")
                        },
                        new
                        {
                            Id = new Guid("3edf22e9-b3a8-42f7-842c-09211c5c29a9"),
                            Name = "Биология",
                            ParentId = new Guid("a5e9dbe9-7159-41be-ac7e-a061d6081c66")
                        },
                        new
                        {
                            Id = new Guid("6bc045b7-be4d-4710-8f57-92cbf8eaed04"),
                            Name = "География",
                            ParentId = new Guid("a5e9dbe9-7159-41be-ac7e-a061d6081c66")
                        },
                        new
                        {
                            Id = new Guid("85508c8f-229f-4b6e-b14d-486426387fea"),
                            Name = "Английский язык",
                            ParentId = new Guid("a5e9dbe9-7159-41be-ac7e-a061d6081c66")
                        },
                        new
                        {
                            Id = new Guid("70c39bf4-86e7-4cf3-b38a-653327eb8817"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("a5e9dbe9-7159-41be-ac7e-a061d6081c66")
                        },
                        new
                        {
                            Id = new Guid("331482f0-0ada-4bc6-bac6-f91e8e18bc9c"),
                            Name = "Французский язык",
                            ParentId = new Guid("a5e9dbe9-7159-41be-ac7e-a061d6081c66")
                        },
                        new
                        {
                            Id = new Guid("8c23815a-2678-4b99-a518-d86d8ee5d409"),
                            Name = "Китайский язык",
                            ParentId = new Guid("a5e9dbe9-7159-41be-ac7e-a061d6081c66")
                        },
                        new
                        {
                            Id = new Guid("8adc9a3b-6d47-426b-b4ed-cf8771d6aae1"),
                            Name = "Испанский язык",
                            ParentId = new Guid("a5e9dbe9-7159-41be-ac7e-a061d6081c66")
                        },
                        new
                        {
                            Id = new Guid("55a2e125-61ea-4e97-9616-7bb8362affa7"),
                            Name = "География",
                            ParentId = new Guid("a5e9dbe9-7159-41be-ac7e-a061d6081c66")
                        },
                        new
                        {
                            Id = new Guid("590c5f85-d766-4f8e-bb20-c33d45626f7e"),
                            Name = "1-4 класс",
                            ParentId = new Guid("32c656d2-645b-4a81-ac8c-0921d9f54f47")
                        },
                        new
                        {
                            Id = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd"),
                            Name = "5-9 класс",
                            ParentId = new Guid("32c656d2-645b-4a81-ac8c-0921d9f54f47")
                        },
                        new
                        {
                            Id = new Guid("381fb160-244f-41b4-829e-4cce9e0ecb34"),
                            Name = "9-11 класс",
                            ParentId = new Guid("32c656d2-645b-4a81-ac8c-0921d9f54f47")
                        },
                        new
                        {
                            Id = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34"),
                            Name = "Народные языки",
                            ParentId = new Guid("32c656d2-645b-4a81-ac8c-0921d9f54f47")
                        },
                        new
                        {
                            Id = new Guid("51ca82d9-0bb2-4c49-a76f-801d44895f18"),
                            Name = "Русский язык",
                            ParentId = new Guid("590c5f85-d766-4f8e-bb20-c33d45626f7e")
                        },
                        new
                        {
                            Id = new Guid("289328f8-1739-436e-ad8f-706f08d34c2a"),
                            Name = "Литературное чтение",
                            ParentId = new Guid("590c5f85-d766-4f8e-bb20-c33d45626f7e")
                        },
                        new
                        {
                            Id = new Guid("d7b7bd52-254e-42ce-95a3-82eef71c5884"),
                            Name = "Математика",
                            ParentId = new Guid("590c5f85-d766-4f8e-bb20-c33d45626f7e")
                        },
                        new
                        {
                            Id = new Guid("2b507fec-af5f-460f-b668-6c86bb6287a4"),
                            Name = "Обществознание",
                            ParentId = new Guid("590c5f85-d766-4f8e-bb20-c33d45626f7e")
                        },
                        new
                        {
                            Id = new Guid("889d5a7d-24f6-403c-864c-1223e1da4bd8"),
                            Name = "Окружающий мир",
                            ParentId = new Guid("590c5f85-d766-4f8e-bb20-c33d45626f7e")
                        },
                        new
                        {
                            Id = new Guid("4359a675-d39a-4b4a-98b4-ec143995c7ae"),
                            Name = "ИЗО",
                            ParentId = new Guid("590c5f85-d766-4f8e-bb20-c33d45626f7e")
                        },
                        new
                        {
                            Id = new Guid("ca33d986-662c-4301-8c27-a7cf9d75b2ab"),
                            Name = "Музыка",
                            ParentId = new Guid("590c5f85-d766-4f8e-bb20-c33d45626f7e")
                        },
                        new
                        {
                            Id = new Guid("acb3ca64-59a8-45af-875c-aa91dae1ee34"),
                            Name = "Технология",
                            ParentId = new Guid("590c5f85-d766-4f8e-bb20-c33d45626f7e")
                        },
                        new
                        {
                            Id = new Guid("e3f3f156-fbb1-4efd-a148-12b8a6c030a8"),
                            Name = "Физическая культура",
                            ParentId = new Guid("590c5f85-d766-4f8e-bb20-c33d45626f7e")
                        },
                        new
                        {
                            Id = new Guid("86eb1a35-b2ff-4aa0-8aae-cb6722ab48cc"),
                            Name = "Английский язык",
                            ParentId = new Guid("590c5f85-d766-4f8e-bb20-c33d45626f7e")
                        },
                        new
                        {
                            Id = new Guid("97bdc359-6b82-4dfe-b00b-5684a8281a7b"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("590c5f85-d766-4f8e-bb20-c33d45626f7e")
                        },
                        new
                        {
                            Id = new Guid("85ea643c-1242-434b-a5a5-5b8975bbfe20"),
                            Name = "Французский язык",
                            ParentId = new Guid("590c5f85-d766-4f8e-bb20-c33d45626f7e")
                        },
                        new
                        {
                            Id = new Guid("35933df8-cd79-4ee2-a80a-ab6f6c26d5ee"),
                            Name = "Испанский язык",
                            ParentId = new Guid("590c5f85-d766-4f8e-bb20-c33d45626f7e")
                        },
                        new
                        {
                            Id = new Guid("d8084754-1165-427d-82b4-901ca401f114"),
                            Name = "Китайский язык",
                            ParentId = new Guid("590c5f85-d766-4f8e-bb20-c33d45626f7e")
                        },
                        new
                        {
                            Id = new Guid("056a67b9-e7da-4374-9d99-f2be2689d458"),
                            Name = "Русский язык",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("d7def495-e8db-4cfd-9861-dfa19899f1d2"),
                            Name = "Литература",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("0e5c1570-8b12-4ade-94ac-bd64853618ab"),
                            Name = "История",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("f95144ed-28fa-4f6f-bdf6-7292b0a5251d"),
                            Name = "Обществознание",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("33210137-05ea-480b-99a3-0c0ac3da9e93"),
                            Name = "География",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("795fa263-e7b1-48f5-b3b4-d7d92f358357"),
                            Name = "Алгебра",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("99bcb1f4-9e0a-4fbf-9679-9049e0483adb"),
                            Name = "Геометрия",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("fcc2ef09-0a1b-45cb-bd1e-c63448eb7b8f"),
                            Name = "Информатика",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("6f56d5c7-e410-40a7-b46d-45f6032e287b"),
                            Name = "Основы духовно-нравственной культуры народов России",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("fe17fe8f-87a8-4d64-af77-5952f4002b14"),
                            Name = "Основы религиозных культур и светской этики",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("6fce4f92-2115-4b53-9d82-2532a68dcd17"),
                            Name = "Физика",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("abe076c6-818f-4504-add5-339ff357727a"),
                            Name = "Биология",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("6f01c2c6-08f2-467d-8eb5-420da0fc5814"),
                            Name = "Химия",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("dea3e0de-b6d9-401f-8beb-c9f21c8d11b5"),
                            Name = "Изобразительное искусство",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("4689d1c8-1cea-4c16-8537-d5f11edf2fd7"),
                            Name = "Музыка",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("1595ec49-a4e0-4439-9791-5ba955580f97"),
                            Name = "Технология",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("7c876f2f-fb72-4e56-bd4c-2b0fc7b4508e"),
                            Name = "Физическая культура",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("9288f1a3-fb0c-440f-8a4f-4ee3fd0ecc3f"),
                            Name = "Основы безопасности жизнедеятельности",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("68ee1f22-e87d-4c3b-aaae-ccab12a5b1ca"),
                            Name = "Английский язык",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("fffc260d-cfdc-47c9-baf4-843f153b7a1b"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("383edfc2-eafb-4514-bf02-c2cfd5c2f56f"),
                            Name = "Французский язык",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("2d55a722-9eb7-47b1-8e0f-95dd2c41331c"),
                            Name = "Испанский язык",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("9a947ff7-1895-478f-98e6-bdcaebec4140"),
                            Name = "Китайский язык",
                            ParentId = new Guid("e293c9db-1204-4ca3-a7c9-54f048ecfbbd")
                        },
                        new
                        {
                            Id = new Guid("8ae86239-8173-4f66-a6d8-3491ebd56f56"),
                            Name = "Алгебра",
                            ParentId = new Guid("381fb160-244f-41b4-829e-4cce9e0ecb34")
                        },
                        new
                        {
                            Id = new Guid("bf6831f7-80f1-47f8-ae0f-e06eaac841a7"),
                            Name = "Геометрия",
                            ParentId = new Guid("381fb160-244f-41b4-829e-4cce9e0ecb34")
                        },
                        new
                        {
                            Id = new Guid("4ec94492-8b67-490b-b268-d2d5a20ad81b"),
                            Name = "Русский язык",
                            ParentId = new Guid("381fb160-244f-41b4-829e-4cce9e0ecb34")
                        },
                        new
                        {
                            Id = new Guid("6539a209-f255-4f52-8c3a-16a100555856"),
                            Name = "Литература",
                            ParentId = new Guid("381fb160-244f-41b4-829e-4cce9e0ecb34")
                        },
                        new
                        {
                            Id = new Guid("8d7c2f7e-468a-42d0-a900-85bf0a137dbd"),
                            Name = "Всеобщая история",
                            ParentId = new Guid("381fb160-244f-41b4-829e-4cce9e0ecb34")
                        },
                        new
                        {
                            Id = new Guid("f4492461-2c46-46ac-b0cd-dc6890b1bcb0"),
                            Name = "История России",
                            ParentId = new Guid("381fb160-244f-41b4-829e-4cce9e0ecb34")
                        },
                        new
                        {
                            Id = new Guid("f5e934c4-3186-4fe7-8fc1-1f1d2eb91377"),
                            Name = "Обществознание",
                            ParentId = new Guid("381fb160-244f-41b4-829e-4cce9e0ecb34")
                        },
                        new
                        {
                            Id = new Guid("21c72d51-b3cc-41cb-84aa-f6a02b77fdf9"),
                            Name = "Черчение",
                            ParentId = new Guid("381fb160-244f-41b4-829e-4cce9e0ecb34")
                        },
                        new
                        {
                            Id = new Guid("c7c5e77f-1ff3-49ac-b113-0a20aaa0cac7"),
                            Name = "Основы безопасности и жизнедеятельности",
                            ParentId = new Guid("381fb160-244f-41b4-829e-4cce9e0ecb34")
                        },
                        new
                        {
                            Id = new Guid("ba57e2c5-6084-4778-8816-73785830c4cc"),
                            Name = "Информатика",
                            ParentId = new Guid("381fb160-244f-41b4-829e-4cce9e0ecb34")
                        },
                        new
                        {
                            Id = new Guid("6c3a097a-4ec8-4e94-b84a-f296bdcc4061"),
                            Name = "География",
                            ParentId = new Guid("381fb160-244f-41b4-829e-4cce9e0ecb34")
                        },
                        new
                        {
                            Id = new Guid("e472eeba-cee2-4de6-be57-eb6a2a75c6f6"),
                            Name = "Физическая культура",
                            ParentId = new Guid("381fb160-244f-41b4-829e-4cce9e0ecb34")
                        },
                        new
                        {
                            Id = new Guid("42b47fb6-95fe-4ff9-8a28-9a026d4995f0"),
                            Name = "Биология",
                            ParentId = new Guid("381fb160-244f-41b4-829e-4cce9e0ecb34")
                        },
                        new
                        {
                            Id = new Guid("d7ca591b-1edd-4e76-97ed-ae3cef1c4d5f"),
                            Name = "Физика",
                            ParentId = new Guid("381fb160-244f-41b4-829e-4cce9e0ecb34")
                        },
                        new
                        {
                            Id = new Guid("0ae5053f-d330-4f9d-9f5f-064e5756fec9"),
                            Name = "Химия",
                            ParentId = new Guid("381fb160-244f-41b4-829e-4cce9e0ecb34")
                        },
                        new
                        {
                            Id = new Guid("57440685-d87b-4e97-9aff-a05c67ea2e24"),
                            Name = "Английский язык",
                            ParentId = new Guid("381fb160-244f-41b4-829e-4cce9e0ecb34")
                        },
                        new
                        {
                            Id = new Guid("511fa85c-6eef-4509-b3b8-195533b1f9c6"),
                            Name = "Немецкий язык",
                            ParentId = new Guid("381fb160-244f-41b4-829e-4cce9e0ecb34")
                        },
                        new
                        {
                            Id = new Guid("61bd2da4-43f6-4511-94b5-45f6f55c9a72"),
                            Name = "Французский язык",
                            ParentId = new Guid("381fb160-244f-41b4-829e-4cce9e0ecb34")
                        },
                        new
                        {
                            Id = new Guid("c27411d2-e813-4500-bf29-f3e6349c5bc2"),
                            Name = "Испанский язык",
                            ParentId = new Guid("381fb160-244f-41b4-829e-4cce9e0ecb34")
                        },
                        new
                        {
                            Id = new Guid("91f058a2-8589-48bf-887b-598e4f5bf413"),
                            Name = "Китайский язык",
                            ParentId = new Guid("381fb160-244f-41b4-829e-4cce9e0ecb34")
                        },
                        new
                        {
                            Id = new Guid("04999326-f2a5-4887-a5ce-c3da624bd86e"),
                            Name = "Абазинский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("29a7f887-6ad9-41e9-ba2a-68b2316a1f76"),
                            Name = "Адыгейский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("75aee469-8a00-4f8b-b8a1-6d5a6e00cdd2"),
                            Name = "Алтайский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("9978f598-cd6b-489a-911f-67abf3a987c1"),
                            Name = "Башкирский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("4999b26d-3190-4795-a964-5ece1b3c9db5"),
                            Name = "Бурятский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("a3c29d10-3647-402f-a937-45255ea5a7fe"),
                            Name = "Дагестанский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("5290f86e-77c8-463a-b769-ec3140288043"),
                            Name = "Ингушский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("798c4af4-e750-40cd-806f-4328e3aa5b90"),
                            Name = "Кабардино-черкесский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("e0e8af28-3bcd-4448-b5f3-89536f3b5105"),
                            Name = "Калмыцкий язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("bc65c1a1-1d97-444b-b286-d935d1e8545f"),
                            Name = "Карачаево-балкарский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("a1a19881-d076-4ee3-bd55-371bda6be8ba"),
                            Name = "Коми язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("83d3474a-8429-42e2-9600-a1bdc71cc24f"),
                            Name = "Крымскотатарский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("870986a3-3492-483b-8fb1-f85902f390ff"),
                            Name = "Марийский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("b1301ded-97de-47ef-8b34-8259aed60463"),
                            Name = "Мокшанский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("6da8d0c1-bb4c-4935-8c7b-afefaddb3334"),
                            Name = "Ногайский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("6f0c7af2-8281-45e9-8f2f-c6e4258fa307"),
                            Name = "Осетинский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("3dec110c-8a59-41e6-886b-eb05531d483a"),
                            Name = "Татарский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("0587f108-3c44-497b-9d11-bf2932b8f15b"),
                            Name = "Тувинский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("36f7f170-bae5-46b5-98a6-3e7334d3fc9f"),
                            Name = "Удмуртский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("db611e48-d033-4015-905b-b6242394e293"),
                            Name = "Хакасский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("18b9c17e-5eb5-42d2-a2c7-23364ddc748e"),
                            Name = "Чеченский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("810a6d1b-0e5d-418e-a872-cd2b500b5633"),
                            Name = "Чувашский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("51b2224c-0d3b-4be0-974c-5070796cc967"),
                            Name = "Эрзянский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        },
                        new
                        {
                            Id = new Guid("f1bbcedf-60ff-4482-bf53-f50ad1dedd85"),
                            Name = "Якутский язык",
                            ParentId = new Guid("200214e0-5ddb-471d-9eb7-941d7b549b34")
                        });
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Violators", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateBan")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateCreatedViolator")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("StudentsId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("TeacherId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("StudentsId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Violators");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.AboutTeacher", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.GroupLesson", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.TeacherTypeLesson", "TeacherTypeLesson")
                        .WithMany()
                        .HasForeignKey("TeacherTypeLessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeacherTypeLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.GroupLessonStudents", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.GroupLesson", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspDigitalLesson.Model.Entity.Students", "Students")
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Scheduler", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.GroupLesson", "GroupLesson")
                        .WithMany()
                        .HasForeignKey("GroupLessonId");

                    b.HasOne("AspDigitalLesson.Model.Entity.SingleLesson", "SingleLesson")
                        .WithMany()
                        .HasForeignKey("SingleLessonId");

                    b.HasOne("AspDigitalLesson.Model.Entity.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupLesson");

                    b.Navigation("SingleLesson");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.SingleLesson", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.Students", "Students")
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspDigitalLesson.Model.Entity.TeacherTypeLesson", "TeacherTypeLesson")
                        .WithMany()
                        .HasForeignKey("TeacherTypeLessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Students");

                    b.Navigation("TeacherTypeLesson");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Students", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.SettingsStudent", "SettingsStudent")
                        .WithMany()
                        .HasForeignKey("SettingsStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SettingsStudent");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Teacher", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.SettingsTeacher", "SettingsTeacher")
                        .WithMany()
                        .HasForeignKey("SettingsTeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SettingsTeacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TeacherTypeLesson", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.Teacher", "Teacher")
                        .WithOne()
                        .HasForeignKey("AspDigitalLesson.Model.Entity.TeacherTypeLesson", "TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspDigitalLesson.Model.Entity.TypeLessons", "TypeLessons")
                        .WithMany()
                        .HasForeignKey("TypeLessonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");

                    b.Navigation("TypeLessons");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TypeLessons", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.TypeLessons", "Parent")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.Violators", b =>
                {
                    b.HasOne("AspDigitalLesson.Model.Entity.Students", "Students")
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspDigitalLesson.Model.Entity.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId");

                    b.Navigation("Students");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("AspDigitalLesson.Model.Entity.TypeLessons", b =>
                {
                    b.Navigation("SubCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
